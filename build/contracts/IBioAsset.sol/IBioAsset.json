{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "MetaDataCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "MetaDataUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "availableLicenses",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_licenseQty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_licensePrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isIPForSale",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_ipPrice",
          "type": "uint256"
        }
      ],
      "name": "registerWithMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "setMetaData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "updateMetaData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_licensePrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isIPForSale",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_ipPrice",
          "type": "uint256"
        }
      ],
      "name": "updateWithMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "availableLicenses()": "4563dbb4",
    "owner()": "8da5cb5b",
    "registerWithMarket(uint256,uint256,bool,uint256)": "40c9f51d",
    "setMetaData(bytes)": "1bf4f4e4",
    "updateMetaData(bytes)": "6634d733",
    "updateWithMarket(uint256,bool,uint256)": "1a498505"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"MetaDataCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"MetaDataUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"availableLicenses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_licenseQty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_licensePrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isIPForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_ipPrice\",\"type\":\"uint256\"}],\"name\":\"registerWithMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setMetaData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"updateMetaData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_licensePrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isIPForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_ipPrice\",\"type\":\"uint256\"}],\"name\":\"updateWithMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Asset interface to interact with the Bionet.  This should be implemented with an ERC-1155 or 721 contact.\",\"events\":{\"MetaDataCreated(bytes)\":{\"details\":\"Emitted when owner calls `setMetaData`\"},\"MetaDataUpdated(bytes)\":{\"details\":\"Emitted when owner calls `updateMetaData`\"}},\"kind\":\"dev\",\"methods\":{\"availableLicenses()\":{\"details\":\"Return the number of licenses that are available by the owner for sale\"},\"owner()\":{\"details\":\"Return the owner of the Asset\"},\"registerWithMarket(uint256,uint256,bool,uint256)\":{\"details\":\"Register the asset with the market.  Can only be called once - enforced via the market.\",\"params\":{\"_ipPrice\":\"cost of the IP in biotokens IFF it's for sale\",\"_isIPForSale\":\"is the IP available to buy\",\"_licensePrice\":\"the price per license in biotokens\",\"_licenseQty\":\"the number of licenses to mint\"}},\"setMetaData(bytes)\":{\"details\":\"Sets the metadata in the event log (via event above). `data` should follow a defined format that can be extracted off-chain\"},\"updateMetaData(bytes)\":{\"details\":\"Updates the metadata via the event log.\"},\"updateWithMarket(uint256,bool,uint256)\":{\"details\":\"Update asset information in the market\",\"params\":{\"_ipPrice\":\"cost of the IP in biotokens IFF it's for sale\",\"_isIPForSale\":\"is the IP available to buy\",\"_licensePrice\":\"the price per license in biotokens\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/IBioAsset.sol\":\"IBioAsset\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzepplin-contracts/=lib/openzepplin-contracts/\",\":openzepplin/=lib/openzepplin-contracts/contracts/\"]},\"sources\":{\"src/tokens/IBioAsset.sol\":{\"keccak256\":\"0x53da33bea046aa17e4e7205b5a1263f0cc92796a7a2659a8f589db35b7a10aea\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a8c17f9f9d049cd58829e6df72685108e83b99de218c3bd1a5b88bee9ff82e83\",\"dweb:/ipfs/QmeJtm1bhnkJVyB4byL3seeQePnEyUpV1hS6TrKE8URAPF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetaDataCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetaDataUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "availableLicenses",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_licenseQty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_licensePrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isIPForSale",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "_ipPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerWithMarket"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMetaData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMetaData"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_licensePrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isIPForSale",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "_ipPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateWithMarket"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "availableLicenses()": {
            "details": "Return the number of licenses that are available by the owner for sale"
          },
          "owner()": {
            "details": "Return the owner of the Asset"
          },
          "registerWithMarket(uint256,uint256,bool,uint256)": {
            "details": "Register the asset with the market.  Can only be called once - enforced via the market.",
            "params": {
              "_ipPrice": "cost of the IP in biotokens IFF it's for sale",
              "_isIPForSale": "is the IP available to buy",
              "_licensePrice": "the price per license in biotokens",
              "_licenseQty": "the number of licenses to mint"
            }
          },
          "setMetaData(bytes)": {
            "details": "Sets the metadata in the event log (via event above). `data` should follow a defined format that can be extracted off-chain"
          },
          "updateMetaData(bytes)": {
            "details": "Updates the metadata via the event log."
          },
          "updateWithMarket(uint256,bool,uint256)": {
            "details": "Update asset information in the market",
            "params": {
              "_ipPrice": "cost of the IP in biotokens IFF it's for sale",
              "_isIPForSale": "is the IP available to buy",
              "_licensePrice": "the price per license in biotokens"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzepplin-contracts/=lib/openzepplin-contracts/",
        ":openzepplin/=lib/openzepplin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/tokens/IBioAsset.sol": "IBioAsset"
      },
      "libraries": {}
    },
    "sources": {
      "src/tokens/IBioAsset.sol": {
        "keccak256": "0x53da33bea046aa17e4e7205b5a1263f0cc92796a7a2659a8f589db35b7a10aea",
        "urls": [
          "bzz-raw://a8c17f9f9d049cd58829e6df72685108e83b99de218c3bd1a5b88bee9ff82e83",
          "dweb:/ipfs/QmeJtm1bhnkJVyB4byL3seeQePnEyUpV1hS6TrKE8URAPF"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/tokens/IBioAsset.sol",
    "id": 27010,
    "exportedSymbols": {
      "IBioAsset": [
        27009
      ]
    },
    "nodeType": "SourceUnit",
    "src": "94:1933:28",
    "nodes": [
      {
        "id": 26951,
        "nodeType": "PragmaDirective",
        "src": "94:24:28",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 27009,
        "nodeType": "ContractDefinition",
        "src": "245:1781:28",
        "nodes": [
          {
            "id": 26957,
            "nodeType": "EventDefinition",
            "src": "338:34:28",
            "anonymous": false,
            "documentation": {
              "id": 26953,
              "nodeType": "StructuredDocumentation",
              "src": "271:62:28",
              "text": " @dev Emitted when owner calls `setMetaData`"
            },
            "eventSelector": "e42963c4040efe8e42940f68da68425dd0affe5e1f96c1a4e702b5801252fca0",
            "name": "MetaDataCreated",
            "nameLocation": "344:15:28",
            "parameters": {
              "id": 26956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26955,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "366:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 26957,
                  "src": "360:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26954,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "359:12:28"
            }
          },
          {
            "id": 26962,
            "nodeType": "EventDefinition",
            "src": "448:34:28",
            "anonymous": false,
            "documentation": {
              "id": 26958,
              "nodeType": "StructuredDocumentation",
              "src": "378:65:28",
              "text": " @dev Emitted when owner calls `updateMetaData`"
            },
            "eventSelector": "d59e7432de307c865d24dc7ec5e50a150e71f62d83ef324d7f9e737bd1963d87",
            "name": "MetaDataUpdated",
            "nameLocation": "454:15:28",
            "parameters": {
              "id": 26961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26960,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "476:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 26962,
                  "src": "470:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26959,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "469:12:28"
            }
          },
          {
            "id": 26968,
            "nodeType": "FunctionDefinition",
            "src": "654:51:28",
            "documentation": {
              "id": 26963,
              "nodeType": "StructuredDocumentation",
              "src": "488:161:28",
              "text": " @dev Sets the metadata in the event log (via event above).\n `data` should follow a defined format that can be extracted\n off-chain"
            },
            "functionSelector": "1bf4f4e4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setMetaData",
            "nameLocation": "663:11:28",
            "parameters": {
              "id": 26966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26965,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "690:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 26968,
                  "src": "675:19:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26964,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "675:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "674:21:28"
            },
            "returnParameters": {
              "id": 26967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "704:0:28"
            },
            "scope": 27009,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26974,
            "nodeType": "FunctionDefinition",
            "src": "779:54:28",
            "documentation": {
              "id": 26969,
              "nodeType": "StructuredDocumentation",
              "src": "711:63:28",
              "text": " @dev Updates the metadata via the event log."
            },
            "functionSelector": "6634d733",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateMetaData",
            "nameLocation": "788:14:28",
            "parameters": {
              "id": 26972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26971,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "818:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 26974,
                  "src": "803:19:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26970,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "803:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "802:21:28"
            },
            "returnParameters": {
              "id": 26973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "832:0:28"
            },
            "scope": 27009,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26986,
            "nodeType": "FunctionDefinition",
            "src": "1205:156:28",
            "documentation": {
              "id": 26975,
              "nodeType": "StructuredDocumentation",
              "src": "839:361:28",
              "text": " @dev Register the asset with the market.  Can only be called once - enforced\n via the market.\n @param _licenseQty the number of licenses to mint\n @param _licensePrice the price per license in biotokens\n @param _isIPForSale is the IP available to buy\n @param _ipPrice cost of the IP in biotokens IFF it's for sale"
            },
            "functionSelector": "40c9f51d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerWithMarket",
            "nameLocation": "1214:18:28",
            "parameters": {
              "id": 26984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26977,
                  "mutability": "mutable",
                  "name": "_licenseQty",
                  "nameLocation": "1250:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 26986,
                  "src": "1242:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26979,
                  "mutability": "mutable",
                  "name": "_licensePrice",
                  "nameLocation": "1279:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 26986,
                  "src": "1271:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1271:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26981,
                  "mutability": "mutable",
                  "name": "_isIPForSale",
                  "nameLocation": "1307:12:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 26986,
                  "src": "1302:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26980,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1302:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26983,
                  "mutability": "mutable",
                  "name": "_ipPrice",
                  "nameLocation": "1337:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 26986,
                  "src": "1329:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1232:119:28"
            },
            "returnParameters": {
              "id": 26985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1360:0:28"
            },
            "scope": 27009,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26996,
            "nodeType": "FunctionDefinition",
            "src": "1620:125:28",
            "documentation": {
              "id": 26987,
              "nodeType": "StructuredDocumentation",
              "src": "1367:248:28",
              "text": " @dev Update asset information in the market\n @param _licensePrice the price per license in biotokens\n @param _isIPForSale is the IP available to buy\n @param _ipPrice cost of the IP in biotokens IFF it's for sale"
            },
            "functionSelector": "1a498505",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateWithMarket",
            "nameLocation": "1629:16:28",
            "parameters": {
              "id": 26994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26989,
                  "mutability": "mutable",
                  "name": "_licensePrice",
                  "nameLocation": "1663:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 26996,
                  "src": "1655:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1655:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26991,
                  "mutability": "mutable",
                  "name": "_isIPForSale",
                  "nameLocation": "1691:12:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 26996,
                  "src": "1686:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26990,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26993,
                  "mutability": "mutable",
                  "name": "_ipPrice",
                  "nameLocation": "1721:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 26996,
                  "src": "1713:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1713:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1645:90:28"
            },
            "returnParameters": {
              "id": 26995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1744:0:28"
            },
            "scope": 27009,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27002,
            "nodeType": "FunctionDefinition",
            "src": "1809:49:28",
            "documentation": {
              "id": 26997,
              "nodeType": "StructuredDocumentation",
              "src": "1751:53:28",
              "text": " @dev Return the owner of the Asset"
            },
            "functionSelector": "8da5cb5b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "1818:5:28",
            "parameters": {
              "id": 26998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1823:2:28"
            },
            "returnParameters": {
              "id": 27001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27000,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27002,
                  "src": "1849:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1849:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1848:9:28"
            },
            "scope": 27009,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27008,
            "nodeType": "FunctionDefinition",
            "src": "1963:61:28",
            "documentation": {
              "id": 27003,
              "nodeType": "StructuredDocumentation",
              "src": "1864:94:28",
              "text": " @dev Return the number of licenses that are available by the owner for sale"
            },
            "functionSelector": "4563dbb4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "availableLicenses",
            "nameLocation": "1972:17:28",
            "parameters": {
              "id": 27004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1989:2:28"
            },
            "returnParameters": {
              "id": 27007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27006,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27008,
                  "src": "2015:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2015:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2014:9:28"
            },
            "scope": 27009,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IBioAsset",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 26952,
          "nodeType": "StructuredDocumentation",
          "src": "120:124:28",
          "text": " @dev Asset interface to interact with the Bionet.  This should be\n implemented with an ERC-1155 or 721 contact."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          27009
        ],
        "name": "IBioAsset",
        "nameLocation": "255:9:28",
        "scope": 27010,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 28
}