{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetOwner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_market",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "MetaDataCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "MetaDataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IP",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LICENSE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "availableLicenses",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_licenseQty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_licensePrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isIPForSale",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_ipPrice",
          "type": "uint256"
        }
      ],
      "name": "registerWithMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "setMetaData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "updateMetaData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_licensePrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isIPForSale",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_ipPrice",
          "type": "uint256"
        }
      ],
      "name": "updateWithMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620023a5380380620023a58339810160408190526200003491620005dc565b8162000040816200009c565b5060016003819055600480546001600160a01b038087166001600160a01b0319928316811790935560058054918616919092161790556040805160208101909152600081526200009392908190620000ae565b505050620009a3565b6002620000aa828262000730565b5050565b6001600160a01b038416620001145760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084015b60405180910390fd5b3360006200012285620001e1565b905060006200013185620001e1565b90506000868152602081815260408083206001600160a01b038b1684529091528120805487929062000165908490620007fc565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4620001c78360008985858962000237565b620001d88360008989898962000297565b50505050505050565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106200021e576200021e62000824565b602090810291909101015292915050565b505050505050565b600160ff168360008151811062000252576200025262000824565b6020026020010151036200022f57600480546001600160a01b0319166001600160a01b038616179055620002898587600062000463565b6200022f8487600162000463565b620002b6846001600160a01b03166200054560201b620008c61760201c565b156200022f5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190620002f2908990899088908890889060040162000868565b6020604051808303816000875af192505050801562000330575060408051601f3d908101601f191682019092526200032d91810190620008af565b60015b620003f0576200033f620008e2565b806308c379a0036200037f575062000356620008ff565b8062000363575062000381565b8060405162461bcd60e51b81526004016200010b91906200098e565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016200010b565b6001600160e01b0319811663f23a6e6160e01b14620001d85760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016200010b565b816001600160a01b0316836001600160a01b031603620004d85760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016200010b565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03163b151590565b80516001600160a01b03811681146200056c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715620005af57620005af62000571565b6040525050565b60005b83811015620005d3578181015183820152602001620005b9565b50506000910152565b600080600060608486031215620005f257600080fd5b620005fd8462000554565b60208501519093506001600160401b03808211156200061b57600080fd5b818601915086601f8301126200063057600080fd5b81518181111562000645576200064562000571565b604051915062000660601f8201601f19166020018362000587565b8082528760208285010111156200067657600080fd5b62000689816020840160208601620005b6565b5092506200069c90506040850162000554565b90509250925092565b600181811c90821680620006ba57607f821691505b602082108103620006db57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200072b57600081815260208120601f850160051c810160208610156200070a5750805b601f850160051c820191505b818110156200022f5782815560010162000716565b505050565b81516001600160401b038111156200074c576200074c62000571565b62000764816200075d8454620006a5565b84620006e1565b602080601f8311600181146200079c5760008415620007835750858301515b600019600386901b1c1916600185901b1785556200022f565b600085815260208120601f198616915b82811015620007cd57888601518255948401946001909101908401620007ac565b5085821015620007ec5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200081e57634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603260045260246000fd5b6000815180845262000854816020860160208601620005b6565b601f01601f19169290920160200192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090620008a4908301846200083a565b979650505050505050565b600060208284031215620008c257600080fd5b81516001600160e01b031981168114620008db57600080fd5b9392505050565b600060033d1115620008fc5760046000803e5060005160e01c5b90565b600060443d10156200090e5790565b6040516003193d81016004833e81513d6001600160401b0380831160248401831017156200093e57505050505090565b8285019150815181811115620009575750505050505090565b843d8701016020828501011115620009725750505050505090565b620009836020828601018762000587565b509095945050505050565b602081526000620008db60208301846200083a565b6119f280620009b36000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c806340c9f51d116100975780638da5cb5b116100665780638da5cb5b14610218578063a22cb46514610233578063e985e9c514610246578063f242432a1461028257600080fd5b806340c9f51d146101ca5780634563dbb4146101dd5780634e1273f4146101e55780636634d7331461020557600080fd5b806318da5649116100d357806318da5649146101875780631a4985051461018f5780631bf4f4e4146101a45780632eb2c2d6146101b757600080fd5b8062fdd58e1461010457806301ffc9a71461012a5780630a912fc41461014d5780630e89341c14610167575b600080fd5b6101176101123660046110c7565b610295565b6040519081526020015b60405180910390f35b61013d61013836600461110a565b61032f565b6040519015158152602001610121565b610155600281565b60405160ff9091168152602001610121565b61017a61017536600461112e565b61037f565b604051610121919061118d565b610155600181565b6101a261019d3660046111b0565b610413565b005b6101a26101b23660046111e5565b6104af565b6101a26101c53660046113a3565b610516565b6101a26101d836600461144d565b6105ad565b61011761068c565b6101f86101f336600461148a565b6106ab565b6040516101219190611590565b6101a26102133660046111e5565b6107d5565b6004546040516001600160a01b039091168152602001610121565b6101a26102413660046115a3565b610830565b61013d6102543660046115d6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101a2610290366004611600565b61083f565b60006001600160a01b0383166103065760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061036057506001600160e01b031982166303a24d0760e21b145b8061032957506301ffc9a760e01b6001600160e01b0319831614610329565b60606002805461038e90611665565b80601f01602080910402602001604051908101604052809291908181526020018280546103ba90611665565b80156104075780601f106103dc57610100808354040283529160200191610407565b820191906000526020600020905b8154815290600101906020018083116103ea57829003601f168201915b50505050509050919050565b6004546001600160a01b0316331461043d5760405162461bcd60e51b81526004016102fd9061169f565b600554604051633456b6ab60e21b8152600481018590528315156024820152604481018390526001600160a01b039091169063d15adaac90606401600060405180830381600087803b15801561049257600080fd5b505af11580156104a6573d6000803e3d6000fd5b50505050505050565b6004546001600160a01b031633146104d95760405162461bcd60e51b81526004016102fd9061169f565b7fe42963c4040efe8e42940f68da68425dd0affe5e1f96c1a4e702b5801252fca0828260405161050a9291906116ca565b60405180910390a15050565b6001600160a01b03851633148061053257506105328533610254565b6105995760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016102fd565b6105a685858585856108d5565b5050505050565b6004546001600160a01b031633146105d75760405162461bcd60e51b81526004016102fd9061169f565b600454604080516020810190915260008152610601916001600160a01b0316906002908790610ac0565b6005546040516322e75a5b60e21b8152600481018590528315156024820152604481018390526001600160a01b0390911690638b9d696c90606401600060405180830381600087803b15801561065657600080fd5b505af115801561066a573d6000803e3d6000fd5b505060055461068692506001600160a01b031690506001610830565b50505050565b6004546000906106a6906001600160a01b03166002610295565b905090565b606081518351146107105760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016102fd565b6000835167ffffffffffffffff81111561072c5761072c611257565b604051908082528060200260200182016040528015610755578160200160208202803683370190505b50905060005b84518110156107cd576107a0858281518110610779576107796116f9565b6020026020010151858381518110610793576107936116f9565b6020026020010151610295565b8282815181106107b2576107b26116f9565b60209081029190910101526107c681611725565b905061075b565b509392505050565b6004546001600160a01b031633146107ff5760405162461bcd60e51b81526004016102fd9061169f565b7fd59e7432de307c865d24dc7ec5e50a150e71f62d83ef324d7f9e737bd1963d87828260405161050a9291906116ca565b61083b338383610bda565b5050565b6001600160a01b03851633148061085b575061085b8533610254565b6108b95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016102fd565b6105a68585858585610cba565b6001600160a01b03163b151590565b81518351146109375760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016102fd565b6001600160a01b03841661095d5760405162461bcd60e51b81526004016102fd9061173e565b3360005b8451811015610a4457600085828151811061097e5761097e6116f9565b60200260200101519050600085838151811061099c5761099c6116f9565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156109ec5760405162461bcd60e51b81526004016102fd90611783565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610a299084906117cd565b9250508190555050505080610a3d90611725565b9050610961565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a949291906117e0565b60405180910390a4610aaa818787878787610df2565b610ab8818787878787610e4a565b505050505050565b6001600160a01b038416610b205760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016102fd565b336000610b2c85610fa5565b90506000610b3985610fa5565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290610b6b9084906117cd565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610bcb83600089858589610df2565b6104a683600089898989610ff0565b816001600160a01b0316836001600160a01b031603610c4d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016102fd565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610ce05760405162461bcd60e51b81526004016102fd9061173e565b336000610cec85610fa5565b90506000610cf985610fa5565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610d3c5760405162461bcd60e51b81526004016102fd90611783565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610d799084906117cd565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610dd9848a8a86868a610df2565b610de7848a8a8a8a8a610ff0565b505050505050505050565b600160ff1683600081518110610e0a57610e0a6116f9565b602002602001015103610ab857600480546001600160a01b0319166001600160a01b038616179055610e3e85876000610bda565b610ab884876001610bda565b6001600160a01b0384163b15610ab85760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610e8e908990899088908890889060040161180e565b6020604051808303816000875af1925050508015610ec9575060408051601f3d908101601f19168201909252610ec69181019061186c565b60015b610f7557610ed5611889565b806308c379a003610f0e5750610ee96118a5565b80610ef45750610f10565b8060405162461bcd60e51b81526004016102fd919061118d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016102fd565b6001600160e01b0319811663bc197c8160e01b146104a65760405162461bcd60e51b81526004016102fd9061192f565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610fdf57610fdf6116f9565b602090810291909101015292915050565b6001600160a01b0384163b15610ab85760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906110349089908990889088908890600401611977565b6020604051808303816000875af192505050801561106f575060408051601f3d908101601f1916820190925261106c9181019061186c565b60015b61107b57610ed5611889565b6001600160e01b0319811663f23a6e6160e01b146104a65760405162461bcd60e51b81526004016102fd9061192f565b80356001600160a01b03811681146110c257600080fd5b919050565b600080604083850312156110da57600080fd5b6110e3836110ab565b946020939093013593505050565b6001600160e01b03198116811461110757600080fd5b50565b60006020828403121561111c57600080fd5b8135611127816110f1565b9392505050565b60006020828403121561114057600080fd5b5035919050565b6000815180845260005b8181101561116d57602081850181015186830182015201611151565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006111276020830184611147565b803580151581146110c257600080fd5b6000806000606084860312156111c557600080fd5b833592506111d5602085016111a0565b9150604084013590509250925092565b600080602083850312156111f857600080fd5b823567ffffffffffffffff8082111561121057600080fd5b818501915085601f83011261122457600080fd5b81358181111561123357600080fd5b86602082850101111561124557600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561129357611293611257565b6040525050565b600067ffffffffffffffff8211156112b4576112b4611257565b5060051b60200190565b600082601f8301126112cf57600080fd5b813560206112dc8261129a565b6040516112e9828261126d565b83815260059390931b850182019282810191508684111561130957600080fd5b8286015b84811015611324578035835291830191830161130d565b509695505050505050565b600082601f83011261134057600080fd5b813567ffffffffffffffff81111561135a5761135a611257565b604051611371601f8301601f19166020018261126d565b81815284602083860101111561138657600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156113bb57600080fd5b6113c4866110ab565b94506113d2602087016110ab565b9350604086013567ffffffffffffffff808211156113ef57600080fd5b6113fb89838a016112be565b9450606088013591508082111561141157600080fd5b61141d89838a016112be565b9350608088013591508082111561143357600080fd5b506114408882890161132f565b9150509295509295909350565b6000806000806080858703121561146357600080fd5b843593506020850135925061147a604086016111a0565b9396929550929360600135925050565b6000806040838503121561149d57600080fd5b823567ffffffffffffffff808211156114b557600080fd5b818501915085601f8301126114c957600080fd5b813560206114d68261129a565b6040516114e3828261126d565b83815260059390931b850182019282810191508984111561150357600080fd5b948201945b8386101561152857611519866110ab565b82529482019490820190611508565b9650508601359250508082111561153e57600080fd5b5061154b858286016112be565b9150509250929050565b600081518084526020808501945080840160005b8381101561158557815187529582019590820190600101611569565b509495945050505050565b6020815260006111276020830184611555565b600080604083850312156115b657600080fd5b6115bf836110ab565b91506115cd602084016111a0565b90509250929050565b600080604083850312156115e957600080fd5b6115f2836110ab565b91506115cd602084016110ab565b600080600080600060a0868803121561161857600080fd5b611621866110ab565b945061162f602087016110ab565b93506040860135925060608601359150608086013567ffffffffffffffff81111561165957600080fd5b6114408882890161132f565b600181811c9082168061167957607f821691505b60208210810361169957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526011908201527024a81d103737ba103a34329037bbb732b960791b604082015260600190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016117375761173761170f565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b808201808211156103295761032961170f565b6040815260006117f36040830185611555565b82810360208401526118058185611555565b95945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061183a90830186611555565b828103606084015261184c8186611555565b905082810360808401526118608185611147565b98975050505050505050565b60006020828403121561187e57600080fd5b8151611127816110f1565b600060033d11156118a25760046000803e5060005160e01c5b90565b600060443d10156118b35790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156118e357505050505090565b82850191508151818111156118fb5750505050505090565b843d87010160208285010111156119155750505050505090565b6119246020828601018761126d565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906119b190830184611147565b97965050505050505056fea26469706673582212205a548012bbee5cafef8da73fefa8f561f9f6747016ac30eaa547bd8ab3a94fab64736f6c63430008100033",
    "sourceMap": "1176:3623:26:-:0;;;1870:433;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1978:4;1134:13:8;1978:4:26;1134:7:8;:13::i;:::-;-1:-1:-1;1701:1:7;1806:7;:22;;;2155:6:26::1;:20:::0;;-1:-1:-1;;;;;2155:20:26;;::::1;-1:-1:-1::0;;;;;;2155:20:26;;::::1;::::0;::::1;::::0;;;2185:6:::1;:30:::0;;;;::::1;::::0;;;::::1;;::::0;;2272:24:::1;::::0;;::::1;::::0;::::1;::::0;;;2155:6:::1;2272:24:::0;;::::1;::::0;1701:1:7;;;2272:5:26::1;:24::i;:::-;1870:433:::0;;;1176:3623;;8156:86:8;8222:4;:13;8229:6;8222:4;:13;:::i;:::-;;8156:86;:::o;8615:709::-;-1:-1:-1;;;;;8762:16:8;;8754:62;;;;-1:-1:-1;;;8754:62:8;;4556:2:32;8754:62:8;;;4538:21:32;4595:2;4575:18;;;4568:30;4634:34;4614:18;;;4607:62;-1:-1:-1;;;4685:18:32;;;4678:31;4726:19;;8754:62:8;;;;;;;;;719:10:19;8827:16:8;8891:21;8909:2;8891:17;:21::i;:::-;8868:44;-1:-1:-1;8922:24:8;8949:25;8967:6;8949:17;:25::i;:::-;8922:52;-1:-1:-1;9062:9:8;:13;;;;;;;;;;;-1:-1:-1;;;;;9062:17:8;;;;;;;;;:27;;9083:6;;9062:9;:27;;9083:6;;9062:27;:::i;:::-;;;;-1:-1:-1;;9104:52:8;;;5157:25:32;;;5213:2;5198:18;;5191:34;;;-1:-1:-1;;;;;9104:52:8;;;;9137:1;;9104:52;;;;;;5130:18:32;9104:52:8;;;;;;;9167:65;9187:8;9205:1;9209:2;9213:3;9218:7;9227:4;9167:19;:65::i;:::-;9243:74;9274:8;9292:1;9296:2;9300;9304:6;9312:4;9243:30;:74::i;:::-;8744:580;;;8615:709;;;;:::o;16910:193::-;17029:16;;;17043:1;17029:16;;;;;;;;;16976;;17004:22;;17029:16;;;;;;;;;;;;-1:-1:-1;17029:16:8;17004:41;;17066:7;17055:5;17061:1;17055:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17091:5;16910:193;-1:-1:-1;;16910:193:8:o;14015:214::-;;;;;;;:::o;4018:779:26:-;1283:1;4346:12;;:3;4350:1;4346:6;;;;;;;;:::i;:::-;;;;;;;:12;4342:449;;4490:6;:11;;-1:-1:-1;;;;;;4490:11:26;-1:-1:-1;;;;;4490:11:26;;;;;4573:41;4592:4;4598:8;-1:-1:-1;4573:18:26;:41::i;:::-;4682:38;4701:2;4705:8;4715:4;4682:18;:38::i;15381:725:8:-;15588:15;:2;-1:-1:-1;;;;;15588:13:8;;;;;;:15;;:::i;:::-;15584:516;;;15623:72;;-1:-1:-1;;;15623:72:8;;-1:-1:-1;;;;;15623:38:8;;;;;:72;;15662:8;;15672:4;;15678:2;;15682:6;;15690:4;;15623:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15623:72:8;;;;;;;;-1:-1:-1;;15623:72:8;;;;;;;;;;;;:::i;:::-;;;15619:471;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;15966:6;15959:14;;-1:-1:-1;;;15959:14:8;;;;;;;;:::i;15619:471::-;;;16013:62;;-1:-1:-1;;;16013:62:8;;7789:2:32;16013:62:8;;;7771:21:32;7828:2;7808:18;;;7801:30;7867:34;7847:18;;;7840:62;7938:22;7918:18;;;7911:50;7978:19;;16013:62:8;7587:416:32;15619:471:8;-1:-1:-1;;;;;;15744:55:8;;-1:-1:-1;;;15744:55:8;15740:152;;15823:50;;-1:-1:-1;;;15823:50:8;;8210:2:32;15823:50:8;;;8192:21:32;8249:2;8229:18;;;8222:30;8288:34;8268:18;;;8261:62;-1:-1:-1;;;8339:18:32;;;8332:38;8387:19;;15823:50:8;8008:404:32;12758:323:8;12908:8;-1:-1:-1;;;;;12899:17:8;:5;-1:-1:-1;;;;;12899:17:8;;12891:71;;;;-1:-1:-1;;;12891:71:8;;8619:2:32;12891:71:8;;;8601:21:32;8658:2;8638:18;;;8631:30;8697:34;8677:18;;;8670:62;-1:-1:-1;;;8748:18:32;;;8741:39;8797:19;;12891:71:8;8417:405:32;12891:71:8;-1:-1:-1;;;;;12972:25:8;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12972:46:8;;;;;;;;;;13033:41;;8967::32;;;13033::8;;8940:18:32;13033:41:8;;;;;;;12758:323;;;:::o;1175:320:18:-;-1:-1:-1;;;;;1465:19:18;;:23;;;1175:320::o;14:177:32:-;93:13;;-1:-1:-1;;;;;135:31:32;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:249;438:2;419:13;;-1:-1:-1;;415:27:32;403:40;;-1:-1:-1;;;;;458:34:32;;494:22;;;455:62;452:88;;;520:18;;:::i;:::-;556:2;549:22;-1:-1:-1;;328:249:32:o;582:250::-;667:1;677:113;691:6;688:1;685:13;677:113;;;767:11;;;761:18;748:11;;;741:39;713:2;706:10;677:113;;;-1:-1:-1;;824:1:32;806:16;;799:27;582:250::o;837:923::-;935:6;943;951;1004:2;992:9;983:7;979:23;975:32;972:52;;;1020:1;1017;1010:12;972:52;1043:40;1073:9;1043:40;:::i;:::-;1127:2;1112:18;;1106:25;1033:50;;-1:-1:-1;;;;;;1180:14:32;;;1177:34;;;1207:1;1204;1197:12;1177:34;1245:6;1234:9;1230:22;1220:32;;1290:7;1283:4;1279:2;1275:13;1271:27;1261:55;;1312:1;1309;1302:12;1261:55;1341:2;1335:9;1363:2;1359;1356:10;1353:36;;;1369:18;;:::i;:::-;1418:2;1412:9;;-1:-1:-1;1430:65:32;1485:2;1466:13;;-1:-1:-1;;1462:27:32;1491:2;1458:36;1412:9;1430:65;:::i;:::-;1519:2;1511:6;1504:18;1559:7;1554:2;1549;1545;1541:11;1537:20;1534:33;1531:53;;;1580:1;1577;1570:12;1531:53;1593:68;1658:2;1653;1645:6;1641:15;1636:2;1632;1628:11;1593:68;:::i;:::-;-1:-1:-1;1680:6:32;-1:-1:-1;1705:49:32;;-1:-1:-1;1750:2:32;1735:18;;1705:49;:::i;:::-;1695:59;;837:923;;;;;:::o;1765:380::-;1844:1;1840:12;;;;1887;;;1908:61;;1962:4;1954:6;1950:17;1940:27;;1908:61;2015:2;2007:6;2004:14;1984:18;1981:38;1978:161;;2061:10;2056:3;2052:20;2049:1;2042:31;2096:4;2093:1;2086:15;2124:4;2121:1;2114:15;1978:161;;1765:380;;;:::o;2276:545::-;2378:2;2373:3;2370:11;2367:448;;;2414:1;2439:5;2435:2;2428:17;2484:4;2480:2;2470:19;2554:2;2542:10;2538:19;2535:1;2531:27;2525:4;2521:38;2590:4;2578:10;2575:20;2572:47;;;-1:-1:-1;2613:4:32;2572:47;2668:2;2663:3;2659:12;2656:1;2652:20;2646:4;2642:31;2632:41;;2723:82;2741:2;2734:5;2731:13;2723:82;;;2786:17;;;2767:1;2756:13;2723:82;;2367:448;2276:545;;;:::o;2997:1352::-;3117:10;;-1:-1:-1;;;;;3139:30:32;;3136:56;;;3172:18;;:::i;:::-;3201:97;3291:6;3251:38;3283:4;3277:11;3251:38;:::i;:::-;3245:4;3201:97;:::i;:::-;3353:4;;3417:2;3406:14;;3434:1;3429:663;;;;4136:1;4153:6;4150:89;;;-1:-1:-1;4205:19:32;;;4199:26;4150:89;-1:-1:-1;;2954:1:32;2950:11;;;2946:24;2942:29;2932:40;2978:1;2974:11;;;2929:57;4252:81;;3399:944;;3429:663;2223:1;2216:14;;;2260:4;2247:18;;-1:-1:-1;;3465:20:32;;;3583:236;3597:7;3594:1;3591:14;3583:236;;;3686:19;;;3680:26;3665:42;;3778:27;;;;3746:1;3734:14;;;;3613:19;;3583:236;;;3587:3;3847:6;3838:7;3835:19;3832:201;;;3908:19;;;3902:26;-1:-1:-1;;3991:1:32;3987:14;;;4003:3;3983:24;3979:37;3975:42;3960:58;3945:74;;3832:201;-1:-1:-1;;;;;4079:1:32;4063:14;;;4059:22;4046:36;;-1:-1:-1;2997:1352:32:o;4756:222::-;4821:9;;;4842:10;;;4839:133;;;4894:10;4889:3;4885:20;4882:1;4875:31;4929:4;4926:1;4919:15;4957:4;4954:1;4947:15;4839:133;4756:222;;;;:::o;5236:127::-;5297:10;5292:3;5288:20;5285:1;5278:31;5328:4;5325:1;5318:15;5352:4;5349:1;5342:15;5368:270;5409:3;5447:5;5441:12;5474:6;5469:3;5462:19;5490:76;5559:6;5552:4;5547:3;5543:14;5536:4;5529:5;5525:16;5490:76;:::i;:::-;5620:2;5599:15;-1:-1:-1;;5595:29:32;5586:39;;;;5627:4;5582:50;;5368:270;-1:-1:-1;;5368:270:32:o;5643:560::-;-1:-1:-1;;;;;5940:15:32;;;5922:34;;5992:15;;5987:2;5972:18;;5965:43;6039:2;6024:18;;6017:34;;;6082:2;6067:18;;6060:34;;;5902:3;6125;6110:19;;6103:32;;;5865:4;;6152:45;;6177:19;;6169:6;6152:45;:::i;:::-;6144:53;5643:560;-1:-1:-1;;;;;;;5643:560:32:o;6208:290::-;6277:6;6330:2;6318:9;6309:7;6305:23;6301:32;6298:52;;;6346:1;6343;6336:12;6298:52;6372:16;;-1:-1:-1;;;;;;6417:32:32;;6407:43;;6397:71;;6464:1;6461;6454:12;6397:71;6487:5;6208:290;-1:-1:-1;;;6208:290:32:o;6503:179::-;6538:3;6580:1;6562:16;6559:23;6556:120;;;6626:1;6623;6620;6605:23;-1:-1:-1;6663:1:32;6657:8;6652:3;6648:18;6556:120;6503:179;:::o;6687:671::-;6726:3;6768:4;6750:16;6747:26;6744:39;;;6687:671;:::o;6744:39::-;6810:2;6804:9;-1:-1:-1;;6875:16:32;6871:25;;6868:1;6804:9;6847:50;6920:11;;6950:16;-1:-1:-1;;;;;7018:14:32;;;7049:4;7037:17;;7034:25;-1:-1:-1;7015:45:32;7012:58;;;7063:5;;;;;6687:671;:::o;7012:58::-;7100:6;7094:4;7090:17;7079:28;;7136:3;7130:10;7163:2;7155:6;7152:14;7149:27;;;7169:5;;;;;;6687:671;:::o;7149:27::-;7253:2;7234:16;7228:4;7224:27;7220:36;7213:4;7204:6;7199:3;7195:16;7191:27;7188:69;7185:82;;;7260:5;;;;;;6687:671;:::o;7185:82::-;7276:57;7327:4;7318:6;7310;7306:19;7302:30;7296:4;7276:57;:::i;:::-;-1:-1:-1;7349:3:32;;6687:671;-1:-1:-1;;;;;6687:671:32:o;7363:219::-;7512:2;7501:9;7494:21;7475:4;7532:44;7572:2;7561:9;7557:18;7549:6;7532:44;:::i;8827:187::-;1176:3623:26;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ff5760003560e01c806340c9f51d116100975780638da5cb5b116100665780638da5cb5b14610218578063a22cb46514610233578063e985e9c514610246578063f242432a1461028257600080fd5b806340c9f51d146101ca5780634563dbb4146101dd5780634e1273f4146101e55780636634d7331461020557600080fd5b806318da5649116100d357806318da5649146101875780631a4985051461018f5780631bf4f4e4146101a45780632eb2c2d6146101b757600080fd5b8062fdd58e1461010457806301ffc9a71461012a5780630a912fc41461014d5780630e89341c14610167575b600080fd5b6101176101123660046110c7565b610295565b6040519081526020015b60405180910390f35b61013d61013836600461110a565b61032f565b6040519015158152602001610121565b610155600281565b60405160ff9091168152602001610121565b61017a61017536600461112e565b61037f565b604051610121919061118d565b610155600181565b6101a261019d3660046111b0565b610413565b005b6101a26101b23660046111e5565b6104af565b6101a26101c53660046113a3565b610516565b6101a26101d836600461144d565b6105ad565b61011761068c565b6101f86101f336600461148a565b6106ab565b6040516101219190611590565b6101a26102133660046111e5565b6107d5565b6004546040516001600160a01b039091168152602001610121565b6101a26102413660046115a3565b610830565b61013d6102543660046115d6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101a2610290366004611600565b61083f565b60006001600160a01b0383166103065760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061036057506001600160e01b031982166303a24d0760e21b145b8061032957506301ffc9a760e01b6001600160e01b0319831614610329565b60606002805461038e90611665565b80601f01602080910402602001604051908101604052809291908181526020018280546103ba90611665565b80156104075780601f106103dc57610100808354040283529160200191610407565b820191906000526020600020905b8154815290600101906020018083116103ea57829003601f168201915b50505050509050919050565b6004546001600160a01b0316331461043d5760405162461bcd60e51b81526004016102fd9061169f565b600554604051633456b6ab60e21b8152600481018590528315156024820152604481018390526001600160a01b039091169063d15adaac90606401600060405180830381600087803b15801561049257600080fd5b505af11580156104a6573d6000803e3d6000fd5b50505050505050565b6004546001600160a01b031633146104d95760405162461bcd60e51b81526004016102fd9061169f565b7fe42963c4040efe8e42940f68da68425dd0affe5e1f96c1a4e702b5801252fca0828260405161050a9291906116ca565b60405180910390a15050565b6001600160a01b03851633148061053257506105328533610254565b6105995760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016102fd565b6105a685858585856108d5565b5050505050565b6004546001600160a01b031633146105d75760405162461bcd60e51b81526004016102fd9061169f565b600454604080516020810190915260008152610601916001600160a01b0316906002908790610ac0565b6005546040516322e75a5b60e21b8152600481018590528315156024820152604481018390526001600160a01b0390911690638b9d696c90606401600060405180830381600087803b15801561065657600080fd5b505af115801561066a573d6000803e3d6000fd5b505060055461068692506001600160a01b031690506001610830565b50505050565b6004546000906106a6906001600160a01b03166002610295565b905090565b606081518351146107105760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016102fd565b6000835167ffffffffffffffff81111561072c5761072c611257565b604051908082528060200260200182016040528015610755578160200160208202803683370190505b50905060005b84518110156107cd576107a0858281518110610779576107796116f9565b6020026020010151858381518110610793576107936116f9565b6020026020010151610295565b8282815181106107b2576107b26116f9565b60209081029190910101526107c681611725565b905061075b565b509392505050565b6004546001600160a01b031633146107ff5760405162461bcd60e51b81526004016102fd9061169f565b7fd59e7432de307c865d24dc7ec5e50a150e71f62d83ef324d7f9e737bd1963d87828260405161050a9291906116ca565b61083b338383610bda565b5050565b6001600160a01b03851633148061085b575061085b8533610254565b6108b95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016102fd565b6105a68585858585610cba565b6001600160a01b03163b151590565b81518351146109375760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016102fd565b6001600160a01b03841661095d5760405162461bcd60e51b81526004016102fd9061173e565b3360005b8451811015610a4457600085828151811061097e5761097e6116f9565b60200260200101519050600085838151811061099c5761099c6116f9565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156109ec5760405162461bcd60e51b81526004016102fd90611783565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610a299084906117cd565b9250508190555050505080610a3d90611725565b9050610961565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a949291906117e0565b60405180910390a4610aaa818787878787610df2565b610ab8818787878787610e4a565b505050505050565b6001600160a01b038416610b205760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016102fd565b336000610b2c85610fa5565b90506000610b3985610fa5565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290610b6b9084906117cd565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610bcb83600089858589610df2565b6104a683600089898989610ff0565b816001600160a01b0316836001600160a01b031603610c4d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016102fd565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610ce05760405162461bcd60e51b81526004016102fd9061173e565b336000610cec85610fa5565b90506000610cf985610fa5565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610d3c5760405162461bcd60e51b81526004016102fd90611783565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610d799084906117cd565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610dd9848a8a86868a610df2565b610de7848a8a8a8a8a610ff0565b505050505050505050565b600160ff1683600081518110610e0a57610e0a6116f9565b602002602001015103610ab857600480546001600160a01b0319166001600160a01b038616179055610e3e85876000610bda565b610ab884876001610bda565b6001600160a01b0384163b15610ab85760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610e8e908990899088908890889060040161180e565b6020604051808303816000875af1925050508015610ec9575060408051601f3d908101601f19168201909252610ec69181019061186c565b60015b610f7557610ed5611889565b806308c379a003610f0e5750610ee96118a5565b80610ef45750610f10565b8060405162461bcd60e51b81526004016102fd919061118d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016102fd565b6001600160e01b0319811663bc197c8160e01b146104a65760405162461bcd60e51b81526004016102fd9061192f565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610fdf57610fdf6116f9565b602090810291909101015292915050565b6001600160a01b0384163b15610ab85760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906110349089908990889088908890600401611977565b6020604051808303816000875af192505050801561106f575060408051601f3d908101601f1916820190925261106c9181019061186c565b60015b61107b57610ed5611889565b6001600160e01b0319811663f23a6e6160e01b146104a65760405162461bcd60e51b81526004016102fd9061192f565b80356001600160a01b03811681146110c257600080fd5b919050565b600080604083850312156110da57600080fd5b6110e3836110ab565b946020939093013593505050565b6001600160e01b03198116811461110757600080fd5b50565b60006020828403121561111c57600080fd5b8135611127816110f1565b9392505050565b60006020828403121561114057600080fd5b5035919050565b6000815180845260005b8181101561116d57602081850181015186830182015201611151565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006111276020830184611147565b803580151581146110c257600080fd5b6000806000606084860312156111c557600080fd5b833592506111d5602085016111a0565b9150604084013590509250925092565b600080602083850312156111f857600080fd5b823567ffffffffffffffff8082111561121057600080fd5b818501915085601f83011261122457600080fd5b81358181111561123357600080fd5b86602082850101111561124557600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561129357611293611257565b6040525050565b600067ffffffffffffffff8211156112b4576112b4611257565b5060051b60200190565b600082601f8301126112cf57600080fd5b813560206112dc8261129a565b6040516112e9828261126d565b83815260059390931b850182019282810191508684111561130957600080fd5b8286015b84811015611324578035835291830191830161130d565b509695505050505050565b600082601f83011261134057600080fd5b813567ffffffffffffffff81111561135a5761135a611257565b604051611371601f8301601f19166020018261126d565b81815284602083860101111561138657600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156113bb57600080fd5b6113c4866110ab565b94506113d2602087016110ab565b9350604086013567ffffffffffffffff808211156113ef57600080fd5b6113fb89838a016112be565b9450606088013591508082111561141157600080fd5b61141d89838a016112be565b9350608088013591508082111561143357600080fd5b506114408882890161132f565b9150509295509295909350565b6000806000806080858703121561146357600080fd5b843593506020850135925061147a604086016111a0565b9396929550929360600135925050565b6000806040838503121561149d57600080fd5b823567ffffffffffffffff808211156114b557600080fd5b818501915085601f8301126114c957600080fd5b813560206114d68261129a565b6040516114e3828261126d565b83815260059390931b850182019282810191508984111561150357600080fd5b948201945b8386101561152857611519866110ab565b82529482019490820190611508565b9650508601359250508082111561153e57600080fd5b5061154b858286016112be565b9150509250929050565b600081518084526020808501945080840160005b8381101561158557815187529582019590820190600101611569565b509495945050505050565b6020815260006111276020830184611555565b600080604083850312156115b657600080fd5b6115bf836110ab565b91506115cd602084016111a0565b90509250929050565b600080604083850312156115e957600080fd5b6115f2836110ab565b91506115cd602084016110ab565b600080600080600060a0868803121561161857600080fd5b611621866110ab565b945061162f602087016110ab565b93506040860135925060608601359150608086013567ffffffffffffffff81111561165957600080fd5b6114408882890161132f565b600181811c9082168061167957607f821691505b60208210810361169957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526011908201527024a81d103737ba103a34329037bbb732b960791b604082015260600190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016117375761173761170f565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b808201808211156103295761032961170f565b6040815260006117f36040830185611555565b82810360208401526118058185611555565b95945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061183a90830186611555565b828103606084015261184c8186611555565b905082810360808401526118608185611147565b98975050505050505050565b60006020828403121561187e57600080fd5b8151611127816110f1565b600060033d11156118a25760046000803e5060005160e01c5b90565b600060443d10156118b35790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156118e357505050505090565b82850191508151818111156118fb5750505050505090565b843d87010160208285010111156119155750505050505090565b6119246020828601018761126d565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906119b190830184611147565b97965050505050505056fea26469706673582212205a548012bbee5cafef8da73fefa8f561f9f6747016ac30eaa547bd8ab3a94fab64736f6c63430008100033",
    "sourceMap": "1176:3623:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:228:8;;;;;;:::i;:::-;;:::i;:::-;;;597:25:32;;;585:2;570:18;2170:228:8;;;;;;;;1221:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:32;;1177:22;1159:41;;1147:2;1132:18;1221:305:8;1019:187:32;1290:33:26;;1322:1;1290:33;;;;;1383:4:32;1371:17;;;1353:36;;1341:2;1326:18;1290:33:26;1211:184:32;1925:103:8;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1256:28:26:-;;1283:1;1256:28;;3084:273;;;;;;:::i;:::-;;:::i;:::-;;3408:104;;;;;;:::i;:::-;;:::i;4045:430:8:-;;;;;;:::i;:::-;;:::i;2354:679:26:-;;;;;;:::i;:::-;;:::i;3851:109::-;;;:::i;2555:508:8:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3563:107:26:-;;;;;;:::i;:::-;;:::i;3721:79::-;3787:6;;3721:79;;-1:-1:-1;;;;;3787:6:26;;;8586:51:32;;8574:2;8559:18;3721:79:26;8440:203:32;3131:153:8;;;;;;:::i;:::-;;:::i;3351:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3473:27:8;;;3450:4;3473:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3351:166;3584:389;;;;;;:::i;:::-;;:::i;2170:228::-;2256:7;-1:-1:-1;;;;;2283:21:8;;2275:77;;;;-1:-1:-1;;;2275:77:8;;9985:2:32;2275:77:8;;;9967:21:32;10024:2;10004:18;;;9997:30;10063:34;10043:18;;;10036:62;-1:-1:-1;;;10114:18:32;;;10107:41;10165:19;;2275:77:8;;;;;;;;;-1:-1:-1;2369:9:8;:13;;;;;;;;;;;-1:-1:-1;;;;;2369:22:8;;;;;;;;;;2170:228;;;;;:::o;1221:305::-;1323:4;-1:-1:-1;;;;;;1358:41:8;;-1:-1:-1;;;1358:41:8;;:109;;-1:-1:-1;;;;;;;1415:52:8;;-1:-1:-1;;;1415:52:8;1358:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:20;;;1483:36:8;829:155:20;1925:103:8;1985:13;2017:4;2010:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:103;;;:::o;3084:273:26:-;1494:6;;-1:-1:-1;;;;;1494:6:26;1480:10;:20;1472:50;;;;-1:-1:-1;;;1472:50:26;;;;;;;:::i;:::-;3293:6:::1;::::0;:57:::1;::::0;-1:-1:-1;;;3293:57:26;;::::1;::::0;::::1;11122:25:32::0;;;11190:14;;11183:22;11163:18;;;11156:50;11222:18;;;11215:34;;;-1:-1:-1;;;;;3293:6:26;;::::1;::::0;:18:::1;::::0;11095::32;;3293:57:26::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3084:273:::0;;;:::o;3408:104::-;1494:6;;-1:-1:-1;;;;;1494:6:26;1480:10;:20;1472:50;;;;-1:-1:-1;;;1472:50:26;;;;;;;:::i;:::-;3484:21:::1;3500:4;;3484:21;;;;;;;:::i;:::-;;;;;;;;3408:104:::0;;:::o;4045:430:8:-;-1:-1:-1;;;;;4270:20:8;;719:10:19;4270:20:8;;:60;;-1:-1:-1;4294:36:8;4311:4;719:10:19;3351:166:8;:::i;4294:36::-;4249:157;;;;-1:-1:-1;;;4249:157:8;;11855:2:32;4249:157:8;;;11837:21:32;11894:2;11874:18;;;11867:30;11933:34;11913:18;;;11906:62;-1:-1:-1;;;11984:18:32;;;11977:48;12042:19;;4249:157:8;11653:414:32;4249:157:8;4416:52;4439:4;4445:2;4449:3;4454:7;4463:4;4416:22;:52::i;:::-;4045:430;;;;;:::o;2354:679:26:-;1494:6;;-1:-1:-1;;;;;1494:6:26;1480:10;:20;1472:50;;;;-1:-1:-1;;;1472:50:26;;;;;;;:::i;:::-;2681:6:::1;::::0;2675:39:::1;::::0;;::::1;::::0;::::1;::::0;;;2681:6:::1;2675:39:::0;;::::1;::::0;-1:-1:-1;;;;;2681:6:26::1;::::0;1322:1:::1;::::0;2698:11;;2675:5:::1;:39::i;:::-;2826:6;::::0;:59:::1;::::0;-1:-1:-1;;;2826:59:26;;::::1;::::0;::::1;11122:25:32::0;;;11190:14;;11183:22;11163:18;;;11156:50;11222:18;;;11215:34;;;-1:-1:-1;;;;;2826:6:26;;::::1;::::0;:20:::1;::::0;11095:18:32;;2826:59:26::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3012:6:26::1;::::0;2986:40:::1;::::0;-1:-1:-1;;;;;;3012:6:26::1;::::0;-1:-1:-1;3012:6:26;2986:17:::1;:40::i;:::-;2354:679:::0;;;;:::o;3851:109::-;3937:6;;3901:7;;3927:26;;-1:-1:-1;;;;;3937:6:26;1322:1;3927:9;:26::i;:::-;3920:33;;3851:109;:::o;2555:508:8:-;2706:16;2765:3;:10;2746:8;:15;:29;2738:83;;;;-1:-1:-1;;;2738:83:8;;12274:2:32;2738:83:8;;;12256:21:32;12313:2;12293:18;;;12286:30;12352:34;12332:18;;;12325:62;-1:-1:-1;;;12403:18:32;;;12396:39;12452:19;;2738:83:8;12072:405:32;2738:83:8;2832:30;2879:8;:15;2865:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2865:30:8;;2832:63;;2911:9;2906:120;2930:8;:15;2926:1;:19;2906:120;;;2985:30;2995:8;3004:1;2995:11;;;;;;;;:::i;:::-;;;;;;;3008:3;3012:1;3008:6;;;;;;;;:::i;:::-;;;;;;;2985:9;:30::i;:::-;2966:13;2980:1;2966:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2947:3;;;:::i;:::-;;;2906:120;;;-1:-1:-1;3043:13:8;2555:508;-1:-1:-1;;;2555:508:8:o;3563:107:26:-;1494:6;;-1:-1:-1;;;;;1494:6:26;1480:10;:20;1472:50;;;;-1:-1:-1;;;1472:50:26;;;;;;;:::i;:::-;3642:21:::1;3658:4;;3642:21;;;;;;;:::i;3131:153:8:-:0;3225:52;719:10:19;3258:8:8;3268;3225:18;:52::i;:::-;3131:153;;:::o;3584:389::-;-1:-1:-1;;;;;3784:20:8;;719:10:19;3784:20:8;;:60;;-1:-1:-1;3808:36:8;3825:4;719:10:19;3351:166:8;:::i;3808:36::-;3763:148;;;;-1:-1:-1;;;3763:148:8;;13088:2:32;3763:148:8;;;13070:21:32;13127:2;13107:18;;;13100:30;13166:34;13146:18;;;13139:62;-1:-1:-1;;;13217:18:32;;;13210:39;13266:19;;3763:148:8;12886:405:32;3763:148:8;3921:45;3939:4;3945:2;3949;3953:6;3961:4;3921:17;:45::i;1175:320:18:-;-1:-1:-1;;;;;1465:19:18;;:23;;;1175:320::o;6218:1115:8:-;6438:7;:14;6424:3;:10;:28;6416:81;;;;-1:-1:-1;;;6416:81:8;;13498:2:32;6416:81:8;;;13480:21:32;13537:2;13517:18;;;13510:30;13576:34;13556:18;;;13549:62;-1:-1:-1;;;13627:18:32;;;13620:38;13675:19;;6416:81:8;13296:404:32;6416:81:8;-1:-1:-1;;;;;6515:16:8;;6507:66;;;;-1:-1:-1;;;6507:66:8;;;;;;;:::i;:::-;719:10:19;6584:16:8;6697:411;6721:3;:10;6717:1;:14;6697:411;;;6752:10;6765:3;6769:1;6765:6;;;;;;;;:::i;:::-;;;;;;;6752:19;;6785:14;6802:7;6810:1;6802:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6827:19;6849:13;;;;;;;;;;-1:-1:-1;;;;;6849:19:8;;;;;;;;;;;;6802:10;;-1:-1:-1;6890:21:8;;;;6882:76;;;;-1:-1:-1;;;6882:76:8;;;;;;;:::i;:::-;7000:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7000:19:8;;;;;;;;;;7022:20;;;7000:42;;7070:17;;;;;;;:27;;7022:20;;7000:9;7070:27;;7022:20;;7070:27;:::i;:::-;;;;;;;;6738:370;;;6733:3;;;;:::i;:::-;;;6697:411;;;;7153:2;-1:-1:-1;;;;;7123:47:8;7147:4;-1:-1:-1;;;;;7123:47:8;7137:8;-1:-1:-1;;;;;7123:47:8;;7157:3;7162:7;7123:47;;;;;;;:::i;:::-;;;;;;;;7181:59;7201:8;7211:4;7217:2;7221:3;7226:7;7235:4;7181:19;:59::i;:::-;7251:75;7287:8;7297:4;7303:2;7307:3;7312:7;7321:4;7251:35;:75::i;:::-;6406:927;6218:1115;;;;;:::o;8615:709::-;-1:-1:-1;;;;;8762:16:8;;8754:62;;;;-1:-1:-1;;;8754:62:8;;15324:2:32;8754:62:8;;;15306:21:32;15363:2;15343:18;;;15336:30;15402:34;15382:18;;;15375:62;-1:-1:-1;;;15453:18:32;;;15446:31;15494:19;;8754:62:8;15122:397:32;8754:62:8;719:10:19;8827:16:8;8891:21;8909:2;8891:17;:21::i;:::-;8868:44;;8922:24;8949:25;8967:6;8949:17;:25::i;:::-;8922:52;;9062:9;:13;;;;;;;;;;;-1:-1:-1;;;;;9062:17:8;;;;;;;;;:27;;9083:6;;9062:9;:27;;9083:6;;9062:27;:::i;:::-;;;;-1:-1:-1;;9104:52:8;;;15698:25:32;;;15754:2;15739:18;;15732:34;;;-1:-1:-1;;;;;9104:52:8;;;;9137:1;;9104:52;;;;;;15671:18:32;9104:52:8;;;;;;;9167:65;9187:8;9205:1;9209:2;9213:3;9218:7;9227:4;9167:19;:65::i;:::-;9243:74;9274:8;9292:1;9296:2;9300;9304:6;9312:4;9243:30;:74::i;12758:323::-;12908:8;-1:-1:-1;;;;;12899:17:8;:5;-1:-1:-1;;;;;12899:17:8;;12891:71;;;;-1:-1:-1;;;12891:71:8;;15979:2:32;12891:71:8;;;15961:21:32;16018:2;15998:18;;;15991:30;16057:34;16037:18;;;16030:62;-1:-1:-1;;;16108:18:32;;;16101:39;16157:19;;12891:71:8;15777:405:32;12891:71:8;-1:-1:-1;;;;;12972:25:8;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12972:46:8;;;;;;;;;;13033:41;;1159::32;;;13033::8;;1132:18:32;13033:41:8;;;;;;;12758:323;;;:::o;4925:947::-;-1:-1:-1;;;;;5106:16:8;;5098:66;;;;-1:-1:-1;;;5098:66:8;;;;;;;:::i;:::-;719:10:19;5175:16:8;5239:21;5257:2;5239:17;:21::i;:::-;5216:44;;5270:24;5297:25;5315:6;5297:17;:25::i;:::-;5270:52;;5404:19;5426:13;;;;;;;;;;;-1:-1:-1;;;;;5426:19:8;;;;;;;;;;5463:21;;;;5455:76;;;;-1:-1:-1;;;5455:76:8;;;;;;;:::i;:::-;5565:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5565:19:8;;;;;;;;;;5587:20;;;5565:42;;5627:17;;;;;;;:27;;5587:20;;5565:9;5627:27;;5587:20;;5627:27;:::i;:::-;;;;-1:-1:-1;;5670:46:8;;;15698:25:32;;;15754:2;15739:18;;15732:34;;;-1:-1:-1;;;;;5670:46:8;;;;;;;;;;;;;;15671:18:32;5670:46:8;;;;;;;5727:59;5747:8;5757:4;5763:2;5767:3;5772:7;5781:4;5727:19;:59::i;:::-;5797:68;5828:8;5838:4;5844:2;5848;5852:6;5860:4;5797:30;:68::i;:::-;5088:784;;;;4925:947;;;;;:::o;4018:779:26:-;1283:1;4346:12;;:3;4350:1;4346:6;;;;;;;;:::i;:::-;;;;;;;:12;4342:449;;4490:6;:11;;-1:-1:-1;;;;;;4490:11:26;-1:-1:-1;;;;;4490:11:26;;;;;4573:41;4592:4;4598:8;-1:-1:-1;4573:18:26;:41::i;:::-;4682:38;4701:2;4705:8;4715:4;4682:18;:38::i;16112:792:8:-;-1:-1:-1;;;;;16344:13:8;;1465:19:18;:23;16340:558:8;;16379:79;;-1:-1:-1;;;16379:79:8;;-1:-1:-1;;;;;16379:43:8;;;;;:79;;16423:8;;16433:4;;16439:3;;16444:7;;16453:4;;16379:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16379:79:8;;;;;;;;-1:-1:-1;;16379:79:8;;;;;;;;;;;;:::i;:::-;;;16375:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16764:6;16757:14;;-1:-1:-1;;;16757:14:8;;;;;;;;:::i;16375:513::-;;;16811:62;;-1:-1:-1;;;16811:62:8;;18335:2:32;16811:62:8;;;18317:21:32;18374:2;18354:18;;;18347:30;18413:34;18393:18;;;18386:62;-1:-1:-1;;;18464:18:32;;;18457:50;18524:19;;16811:62:8;18133:416:32;16375:513:8;-1:-1:-1;;;;;;16537:60:8;;-1:-1:-1;;;16537:60:8;16533:157;;16621:50;;-1:-1:-1;;;16621:50:8;;;;;;;:::i;16910:193::-;17029:16;;;17043:1;17029:16;;;;;;;;;16976;;17004:22;;17029:16;;;;;;;;;;;;-1:-1:-1;17029:16:8;17004:41;;17066:7;17055:5;17061:1;17055:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17091:5;16910:193;-1:-1:-1;;16910:193:8:o;15381:725::-;-1:-1:-1;;;;;15588:13:8;;1465:19:18;:23;15584:516:8;;15623:72;;-1:-1:-1;;;15623:72:8;;-1:-1:-1;;;;;15623:38:8;;;;;:72;;15662:8;;15672:4;;15678:2;;15682:6;;15690:4;;15623:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15623:72:8;;;;;;;;-1:-1:-1;;15623:72:8;;;;;;;;;;;;:::i;:::-;;;15619:471;;;;:::i;:::-;-1:-1:-1;;;;;;15744:55:8;;-1:-1:-1;;;15744:55:8;15740:152;;15823:50;;-1:-1:-1;;;15823:50:8;;;;;;;:::i;14:173:32:-;82:20;;-1:-1:-1;;;;;131:31:32;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:32:o;633:131::-;-1:-1:-1;;;;;;707:32:32;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:32:o;1400:180::-;1459:6;1512:2;1500:9;1491:7;1487:23;1483:32;1480:52;;;1528:1;1525;1518:12;1480:52;-1:-1:-1;1551:23:32;;1400:180;-1:-1:-1;1400:180:32:o;1585:423::-;1627:3;1665:5;1659:12;1692:6;1687:3;1680:19;1717:1;1727:162;1741:6;1738:1;1735:13;1727:162;;;1803:4;1859:13;;;1855:22;;1849:29;1831:11;;;1827:20;;1820:59;1756:12;1727:162;;;1731:3;1934:1;1927:4;1918:6;1913:3;1909:16;1905:27;1898:38;1997:4;1990:2;1986:7;1981:2;1973:6;1969:15;1965:29;1960:3;1956:39;1952:50;1945:57;;;1585:423;;;;:::o;2013:220::-;2162:2;2151:9;2144:21;2125:4;2182:45;2223:2;2212:9;2208:18;2200:6;2182:45;:::i;2238:160::-;2303:20;;2359:13;;2352:21;2342:32;;2332:60;;2388:1;2385;2378:12;2403:316;2477:6;2485;2493;2546:2;2534:9;2525:7;2521:23;2517:32;2514:52;;;2562:1;2559;2552:12;2514:52;2598:9;2585:23;2575:33;;2627:35;2658:2;2647:9;2643:18;2627:35;:::i;:::-;2617:45;;2709:2;2698:9;2694:18;2681:32;2671:42;;2403:316;;;;;:::o;2724:591::-;2794:6;2802;2855:2;2843:9;2834:7;2830:23;2826:32;2823:52;;;2871:1;2868;2861:12;2823:52;2911:9;2898:23;2940:18;2981:2;2973:6;2970:14;2967:34;;;2997:1;2994;2987:12;2967:34;3035:6;3024:9;3020:22;3010:32;;3080:7;3073:4;3069:2;3065:13;3061:27;3051:55;;3102:1;3099;3092:12;3051:55;3142:2;3129:16;3168:2;3160:6;3157:14;3154:34;;;3184:1;3181;3174:12;3154:34;3229:7;3224:2;3215:6;3211:2;3207:15;3203:24;3200:37;3197:57;;;3250:1;3247;3240:12;3197:57;3281:2;3273:11;;;;;3303:6;;-1:-1:-1;2724:591:32;;-1:-1:-1;;;;2724:591:32:o;3320:127::-;3381:10;3376:3;3372:20;3369:1;3362:31;3412:4;3409:1;3402:15;3436:4;3433:1;3426:15;3452:249;3562:2;3543:13;;-1:-1:-1;;3539:27:32;3527:40;;3597:18;3582:34;;3618:22;;;3579:62;3576:88;;;3644:18;;:::i;:::-;3680:2;3673:22;-1:-1:-1;;3452:249:32:o;3706:183::-;3766:4;3799:18;3791:6;3788:30;3785:56;;;3821:18;;:::i;:::-;-1:-1:-1;3866:1:32;3862:14;3878:4;3858:25;;3706:183::o;3894:724::-;3948:5;4001:3;3994:4;3986:6;3982:17;3978:27;3968:55;;4019:1;4016;4009:12;3968:55;4055:6;4042:20;4081:4;4104:43;4144:2;4104:43;:::i;:::-;4176:2;4170:9;4188:31;4216:2;4208:6;4188:31;:::i;:::-;4254:18;;;4346:1;4342:10;;;;4330:23;;4326:32;;;4288:15;;;;-1:-1:-1;4370:15:32;;;4367:35;;;4398:1;4395;4388:12;4367:35;4434:2;4426:6;4422:15;4446:142;4462:6;4457:3;4454:15;4446:142;;;4528:17;;4516:30;;4566:12;;;;4479;;4446:142;;;-1:-1:-1;4606:6:32;3894:724;-1:-1:-1;;;;;;3894:724:32:o;4623:555::-;4665:5;4718:3;4711:4;4703:6;4699:17;4695:27;4685:55;;4736:1;4733;4726:12;4685:55;4772:6;4759:20;4798:18;4794:2;4791:26;4788:52;;;4820:18;;:::i;:::-;4869:2;4863:9;4881:67;4936:2;4917:13;;-1:-1:-1;;4913:27:32;4942:4;4909:38;4863:9;4881:67;:::i;:::-;4972:2;4964:6;4957:18;5018:3;5011:4;5006:2;4998:6;4994:15;4990:26;4987:35;4984:55;;;5035:1;5032;5025:12;4984:55;5099:2;5092:4;5084:6;5080:17;5073:4;5065:6;5061:17;5048:54;5146:1;5122:15;;;5139:4;5118:26;5111:37;;;;5126:6;4623:555;-1:-1:-1;;;4623:555:32:o;5183:943::-;5337:6;5345;5353;5361;5369;5422:3;5410:9;5401:7;5397:23;5393:33;5390:53;;;5439:1;5436;5429:12;5390:53;5462:29;5481:9;5462:29;:::i;:::-;5452:39;;5510:38;5544:2;5533:9;5529:18;5510:38;:::i;:::-;5500:48;;5599:2;5588:9;5584:18;5571:32;5622:18;5663:2;5655:6;5652:14;5649:34;;;5679:1;5676;5669:12;5649:34;5702:61;5755:7;5746:6;5735:9;5731:22;5702:61;:::i;:::-;5692:71;;5816:2;5805:9;5801:18;5788:32;5772:48;;5845:2;5835:8;5832:16;5829:36;;;5861:1;5858;5851:12;5829:36;5884:63;5939:7;5928:8;5917:9;5913:24;5884:63;:::i;:::-;5874:73;;6000:3;5989:9;5985:19;5972:33;5956:49;;6030:2;6020:8;6017:16;6014:36;;;6046:1;6043;6036:12;6014:36;;6069:51;6112:7;6101:8;6090:9;6086:24;6069:51;:::i;:::-;6059:61;;;5183:943;;;;;;;;:::o;6131:385::-;6214:6;6222;6230;6238;6291:3;6279:9;6270:7;6266:23;6262:33;6259:53;;;6308:1;6305;6298:12;6259:53;6344:9;6331:23;6321:33;;6401:2;6390:9;6386:18;6373:32;6363:42;;6424:35;6455:2;6444:9;6440:18;6424:35;:::i;:::-;6131:385;;;;-1:-1:-1;6414:45:32;;6506:2;6491:18;6478:32;;-1:-1:-1;;6131:385:32:o;6521:1208::-;6639:6;6647;6700:2;6688:9;6679:7;6675:23;6671:32;6668:52;;;6716:1;6713;6706:12;6668:52;6756:9;6743:23;6785:18;6826:2;6818:6;6815:14;6812:34;;;6842:1;6839;6832:12;6812:34;6880:6;6869:9;6865:22;6855:32;;6925:7;6918:4;6914:2;6910:13;6906:27;6896:55;;6947:1;6944;6937:12;6896:55;6983:2;6970:16;7005:4;7028:43;7068:2;7028:43;:::i;:::-;7100:2;7094:9;7112:31;7140:2;7132:6;7112:31;:::i;:::-;7178:18;;;7266:1;7262:10;;;;7254:19;;7250:28;;;7212:15;;;;-1:-1:-1;7290:19:32;;;7287:39;;;7322:1;7319;7312:12;7287:39;7346:11;;;;7366:148;7382:6;7377:3;7374:15;7366:148;;;7448:23;7467:3;7448:23;:::i;:::-;7436:36;;7399:12;;;;7492;;;;7366:148;;;7533:6;-1:-1:-1;;7577:18:32;;7564:32;;-1:-1:-1;;7608:16:32;;;7605:36;;;7637:1;7634;7627:12;7605:36;;7660:63;7715:7;7704:8;7693:9;7689:24;7660:63;:::i;:::-;7650:73;;;6521:1208;;;;;:::o;7734:435::-;7787:3;7825:5;7819:12;7852:6;7847:3;7840:19;7878:4;7907:2;7902:3;7898:12;7891:19;;7944:2;7937:5;7933:14;7965:1;7975:169;7989:6;7986:1;7983:13;7975:169;;;8050:13;;8038:26;;8084:12;;;;8119:15;;;;8011:1;8004:9;7975:169;;;-1:-1:-1;8160:3:32;;7734:435;-1:-1:-1;;;;;7734:435:32:o;8174:261::-;8353:2;8342:9;8335:21;8316:4;8373:56;8425:2;8414:9;8410:18;8402:6;8373:56;:::i;8648:254::-;8713:6;8721;8774:2;8762:9;8753:7;8749:23;8745:32;8742:52;;;8790:1;8787;8780:12;8742:52;8813:29;8832:9;8813:29;:::i;:::-;8803:39;;8861:35;8892:2;8881:9;8877:18;8861:35;:::i;:::-;8851:45;;8648:254;;;;;:::o;8907:260::-;8975:6;8983;9036:2;9024:9;9015:7;9011:23;9007:32;9004:52;;;9052:1;9049;9042:12;9004:52;9075:29;9094:9;9075:29;:::i;:::-;9065:39;;9123:38;9157:2;9146:9;9142:18;9123:38;:::i;9172:606::-;9276:6;9284;9292;9300;9308;9361:3;9349:9;9340:7;9336:23;9332:33;9329:53;;;9378:1;9375;9368:12;9329:53;9401:29;9420:9;9401:29;:::i;:::-;9391:39;;9449:38;9483:2;9472:9;9468:18;9449:38;:::i;:::-;9439:48;;9534:2;9523:9;9519:18;9506:32;9496:42;;9585:2;9574:9;9570:18;9557:32;9547:42;;9640:3;9629:9;9625:19;9612:33;9668:18;9660:6;9657:30;9654:50;;;9700:1;9697;9690:12;9654:50;9723:49;9764:7;9755:6;9744:9;9740:22;9723:49;:::i;10195:380::-;10274:1;10270:12;;;;10317;;;10338:61;;10392:4;10384:6;10380:17;10370:27;;10338:61;10445:2;10437:6;10434:14;10414:18;10411:38;10408:161;;10491:10;10486:3;10482:20;10479:1;10472:31;10526:4;10523:1;10516:15;10554:4;10551:1;10544:15;10408:161;;10195:380;;;:::o;10580:341::-;10782:2;10764:21;;;10821:2;10801:18;;;10794:30;-1:-1:-1;;;10855:2:32;10840:18;;10833:47;10912:2;10897:18;;10580:341::o;11260:388::-;11417:2;11406:9;11399:21;11456:6;11451:2;11440:9;11436:18;11429:34;11513:6;11505;11500:2;11489:9;11485:18;11472:48;11569:1;11540:22;;;11564:2;11536:31;;;11529:42;;;;11632:2;11611:15;;;-1:-1:-1;;11607:29:32;11592:45;11588:54;;11260:388;-1:-1:-1;11260:388:32:o;12482:127::-;12543:10;12538:3;12534:20;12531:1;12524:31;12574:4;12571:1;12564:15;12598:4;12595:1;12588:15;12614:127;12675:10;12670:3;12666:20;12663:1;12656:31;12706:4;12703:1;12696:15;12730:4;12727:1;12720:15;12746:135;12785:3;12806:17;;;12803:43;;12826:18;;:::i;:::-;-1:-1:-1;12873:1:32;12862:13;;12746:135::o;13705:401::-;13907:2;13889:21;;;13946:2;13926:18;;;13919:30;13985:34;13980:2;13965:18;;13958:62;-1:-1:-1;;;14051:2:32;14036:18;;14029:35;14096:3;14081:19;;13705:401::o;14111:406::-;14313:2;14295:21;;;14352:2;14332:18;;;14325:30;14391:34;14386:2;14371:18;;14364:62;-1:-1:-1;;;14457:2:32;14442:18;;14435:40;14507:3;14492:19;;14111:406::o;14522:125::-;14587:9;;;14608:10;;;14605:36;;;14621:18;;:::i;14652:465::-;14909:2;14898:9;14891:21;14872:4;14935:56;14987:2;14976:9;14972:18;14964:6;14935:56;:::i;:::-;15039:9;15031:6;15027:22;15022:2;15011:9;15007:18;15000:50;15067:44;15104:6;15096;15067:44;:::i;:::-;15059:52;14652:465;-1:-1:-1;;;;;14652:465:32:o;16187:827::-;-1:-1:-1;;;;;16584:15:32;;;16566:34;;16636:15;;16631:2;16616:18;;16609:43;16546:3;16683:2;16668:18;;16661:31;;;16509:4;;16715:57;;16752:19;;16744:6;16715:57;:::i;:::-;16820:9;16812:6;16808:22;16803:2;16792:9;16788:18;16781:50;16854:44;16891:6;16883;16854:44;:::i;:::-;16840:58;;16947:9;16939:6;16935:22;16929:3;16918:9;16914:19;16907:51;16975:33;17001:6;16993;16975:33;:::i;:::-;16967:41;16187:827;-1:-1:-1;;;;;;;;16187:827:32:o;17019:249::-;17088:6;17141:2;17129:9;17120:7;17116:23;17112:32;17109:52;;;17157:1;17154;17147:12;17109:52;17189:9;17183:16;17208:30;17232:5;17208:30;:::i;17273:179::-;17308:3;17350:1;17332:16;17329:23;17326:120;;;17396:1;17393;17390;17375:23;-1:-1:-1;17433:1:32;17427:8;17422:3;17418:18;17326:120;17273:179;:::o;17457:671::-;17496:3;17538:4;17520:16;17517:26;17514:39;;;17457:671;:::o;17514:39::-;17580:2;17574:9;-1:-1:-1;;17645:16:32;17641:25;;17638:1;17574:9;17617:50;17696:4;17690:11;17720:16;17755:18;17826:2;17819:4;17811:6;17807:17;17804:25;17799:2;17791:6;17788:14;17785:45;17782:58;;;17833:5;;;;;17457:671;:::o;17782:58::-;17870:6;17864:4;17860:17;17849:28;;17906:3;17900:10;17933:2;17925:6;17922:14;17919:27;;;17939:5;;;;;;17457:671;:::o;17919:27::-;18023:2;18004:16;17998:4;17994:27;17990:36;17983:4;17974:6;17969:3;17965:16;17961:27;17958:69;17955:82;;;18030:5;;;;;;17457:671;:::o;17955:82::-;18046:57;18097:4;18088:6;18080;18076:19;18072:30;18066:4;18046:57;:::i;:::-;-1:-1:-1;18119:3:32;;17457:671;-1:-1:-1;;;;;17457:671:32:o;18554:404::-;18756:2;18738:21;;;18795:2;18775:18;;;18768:30;18834:34;18829:2;18814:18;;18807:62;-1:-1:-1;;;18900:2:32;18885:18;;18878:38;18948:3;18933:19;;18554:404::o;18963:561::-;-1:-1:-1;;;;;19260:15:32;;;19242:34;;19312:15;;19307:2;19292:18;;19285:43;19359:2;19344:18;;19337:34;;;19402:2;19387:18;;19380:34;;;19222:3;19445;19430:19;;19423:32;;;19185:4;;19472:46;;19498:19;;19490:6;19472:46;:::i;:::-;19464:54;18963:561;-1:-1:-1;;;;;;;18963:561:32:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IP()": "18da5649",
    "LICENSE()": "0a912fc4",
    "availableLicenses()": "4563dbb4",
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "isApprovedForAll(address,address)": "e985e9c5",
    "owner()": "8da5cb5b",
    "registerWithMarket(uint256,uint256,bool,uint256)": "40c9f51d",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setMetaData(bytes)": "1bf4f4e4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "updateMetaData(bytes)": "6634d733",
    "updateWithMarket(uint256,bool,uint256)": "1a498505",
    "uri(uint256)": "0e89341c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_market\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"MetaDataCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"MetaDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IP\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LICENSE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableLicenses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_licenseQty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_licensePrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isIPForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_ipPrice\",\"type\":\"uint256\"}],\"name\":\"registerWithMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setMetaData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"updateMetaData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_licensePrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isIPForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_ipPrice\",\"type\":\"uint256\"}],\"name\":\"updateWithMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"There's a single NFT represented by the id 1 There can be many licenses represented by the id 2 TODO: allow the owner to 'mint' more licenses (ID 2) Inspired by the Ocean Protocol\",\"kind\":\"dev\",\"methods\":{\"availableLicenses()\":{\"details\":\"See {IBioAsset}.\"},\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"params\":{\"_assetOwner\":\"based on the caller to the Factory\",\"_market\":\"address of the deployed Market contract. See Factory\",\"_uri\":\"the URI to the metadata of this asset. See indexer API\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"See {IBioAsset}.\"},\"registerWithMarket(uint256,uint256,bool,uint256)\":{\"details\":\"See {IBioAsset}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"setMetaData(bytes)\":{\"details\":\"See {IBioAsset}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateMetaData(bytes)\":{\"details\":\"See {IBioAsset}.\"},\"updateWithMarket(uint256,bool,uint256)\":{\"details\":\"See {IBioAsset}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Create an Asset, minting it to the address of the ' _assetOwner'. See Factory.sol\"}},\"notice\":\"Represents an asset.  Used to track ownership, provenance, and transfers. A user can create an instance of this contract to assert ownership of their Asset(think NFT). For now, the address of this contract represents it's globally unique identifier Through this contract an owner can mint and sell copyright licenses. Sales and transfers are handled via an independent 'Market' contract.  The owner can also (optionally) sell and transfer the Asset (and it's IP) through the market. Metadata about the asset, such as terms/conditions, etc... are embedded in the event log for the contract All sales of an asset are conducted with BioTokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/BioAsset.sol\":\"BioAsset\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzepplin-contracts/=lib/openzepplin-contracts/\",\":openzepplin/=lib/openzepplin-contracts/contracts/\"]},\"sources\":{\"lib/openzepplin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"lib/openzepplin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xc6426cba7e5c2500fe15b62277d308b738ab6cf18967e9b8f57c97ee0c4f5d72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://897a5f3585bed29087d94f04b65c1d34fe9914264100556c23c18379f2185639\",\"dweb:/ipfs/QmNuq6NZyQ7Br2c9qYZ4uzEp8h6FSrZ44ZGd8UacyvRTfP\"]},\"lib/openzepplin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"lib/openzepplin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzepplin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"lib/openzepplin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"lib/openzepplin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzepplin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzepplin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/IAssetMarket.sol\":{\"keccak256\":\"0xef004db3b733a7f71506b11a985c52ce3a9473e29486cb93662c7e87cfcbd98d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://07f7961169b7e0b57afae6cf8a838250b6b39bbb517a92cb4b2e2a47317fe4c1\",\"dweb:/ipfs/QmZWTK3e6RMC6kPMAdJYqFWzkEB6UqbET1bvy7mfq5gVPm\"]},\"src/tokens/BioAsset.sol\":{\"keccak256\":\"0xc21427463a432e181b3c43872086bd607c40fa43dec582c410f7966430a807bc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e5b53ae5d79b70bd9c768b0a33ac488c1323098058f08102f6fcb6282b70c8fa\",\"dweb:/ipfs/QmZfNwTRAZvXZLggqxe7arYgJSgc5oXkhferCD596hDrMB\"]},\"src/tokens/IBioAsset.sol\":{\"keccak256\":\"0x53da33bea046aa17e4e7205b5a1263f0cc92796a7a2659a8f589db35b7a10aea\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a8c17f9f9d049cd58829e6df72685108e83b99de218c3bd1a5b88bee9ff82e83\",\"dweb:/ipfs/QmeJtm1bhnkJVyB4byL3seeQePnEyUpV1hS6TrKE8URAPF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_assetOwner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_market",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetaDataCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetaDataUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IP",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LICENSE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "availableLicenses",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_licenseQty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_licensePrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isIPForSale",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "_ipPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerWithMarket"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMetaData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMetaData"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_licensePrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isIPForSale",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "_ipPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateWithMarket"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "availableLicenses()": {
            "details": "See {IBioAsset}."
          },
          "balanceOf(address,uint256)": {
            "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
          },
          "balanceOfBatch(address[],uint256[])": {
            "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
          },
          "constructor": {
            "params": {
              "_assetOwner": "based on the caller to the Factory",
              "_market": "address of the deployed Market contract. See Factory",
              "_uri": "the URI to the metadata of this asset. See indexer API"
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC1155-isApprovedForAll}."
          },
          "owner()": {
            "details": "See {IBioAsset}."
          },
          "registerWithMarket(uint256,uint256,bool,uint256)": {
            "details": "See {IBioAsset}."
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155-safeBatchTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC1155-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC1155-setApprovalForAll}."
          },
          "setMetaData(bytes)": {
            "details": "See {IBioAsset}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "updateMetaData(bytes)": {
            "details": "See {IBioAsset}."
          },
          "updateWithMarket(uint256,bool,uint256)": {
            "details": "See {IBioAsset}."
          },
          "uri(uint256)": {
            "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Create an Asset, minting it to the address of the ' _assetOwner'. See Factory.sol"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzepplin-contracts/=lib/openzepplin-contracts/",
        ":openzepplin/=lib/openzepplin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/tokens/BioAsset.sol": "BioAsset"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzepplin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
        "urls": [
          "bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
          "dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
        ],
        "license": "MIT"
      },
      "lib/openzepplin-contracts/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0xc6426cba7e5c2500fe15b62277d308b738ab6cf18967e9b8f57c97ee0c4f5d72",
        "urls": [
          "bzz-raw://897a5f3585bed29087d94f04b65c1d34fe9914264100556c23c18379f2185639",
          "dweb:/ipfs/QmNuq6NZyQ7Br2c9qYZ4uzEp8h6FSrZ44ZGd8UacyvRTfP"
        ],
        "license": "MIT"
      },
      "lib/openzepplin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9",
        "urls": [
          "bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5",
          "dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb"
        ],
        "license": "MIT"
      },
      "lib/openzepplin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzepplin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
        "urls": [
          "bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
          "dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
        ],
        "license": "MIT"
      },
      "lib/openzepplin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
        "urls": [
          "bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
          "dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
        ],
        "license": "MIT"
      },
      "lib/openzepplin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzepplin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzepplin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/IAssetMarket.sol": {
        "keccak256": "0xef004db3b733a7f71506b11a985c52ce3a9473e29486cb93662c7e87cfcbd98d",
        "urls": [
          "bzz-raw://07f7961169b7e0b57afae6cf8a838250b6b39bbb517a92cb4b2e2a47317fe4c1",
          "dweb:/ipfs/QmZWTK3e6RMC6kPMAdJYqFWzkEB6UqbET1bvy7mfq5gVPm"
        ],
        "license": "Apache-2.0"
      },
      "src/tokens/BioAsset.sol": {
        "keccak256": "0xc21427463a432e181b3c43872086bd607c40fa43dec582c410f7966430a807bc",
        "urls": [
          "bzz-raw://e5b53ae5d79b70bd9c768b0a33ac488c1323098058f08102f6fcb6282b70c8fa",
          "dweb:/ipfs/QmZfNwTRAZvXZLggqxe7arYgJSgc5oXkhferCD596hDrMB"
        ],
        "license": "Apache-2.0"
      },
      "src/tokens/IBioAsset.sol": {
        "keccak256": "0x53da33bea046aa17e4e7205b5a1263f0cc92796a7a2659a8f589db35b7a10aea",
        "urls": [
          "bzz-raw://a8c17f9f9d049cd58829e6df72685108e83b99de218c3bd1a5b88bee9ff82e83",
          "dweb:/ipfs/QmeJtm1bhnkJVyB4byL3seeQePnEyUpV1hS6TrKE8URAPF"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/tokens/BioAsset.sol",
    "id": 26821,
    "exportedSymbols": {
      "Address": [
        25960
      ],
      "BioAsset": [
        26820
      ],
      "Context": [
        25982
      ],
      "ERC1155": [
        24489
      ],
      "ERC165": [
        26006
      ],
      "IAssetMarket": [
        26154
      ],
      "IBioAsset": [
        27009
      ],
      "IERC1155": [
        24611
      ],
      "IERC1155MetadataURI": [
        24667
      ],
      "IERC1155Receiver": [
        24652
      ],
      "IERC165": [
        26018
      ],
      "ReentrancyGuard": [
        23266
      ]
    },
    "nodeType": "SourceUnit",
    "src": "94:4706:26",
    "nodes": [
      {
        "id": 26606,
        "nodeType": "PragmaDirective",
        "src": "94:24:26",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 26607,
        "nodeType": "ImportDirective",
        "src": "120:47:26",
        "absolutePath": "lib/openzepplin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "file": "openzepplin/token/ERC1155/ERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26821,
        "sourceUnit": 24490,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26608,
        "nodeType": "ImportDirective",
        "src": "168:50:26",
        "absolutePath": "lib/openzepplin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "openzepplin/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26821,
        "sourceUnit": 23267,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26609,
        "nodeType": "ImportDirective",
        "src": "220:25:26",
        "absolutePath": "src/tokens/IBioAsset.sol",
        "file": "./IBioAsset.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26821,
        "sourceUnit": 27010,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26610,
        "nodeType": "ImportDirective",
        "src": "246:29:26",
        "absolutePath": "src/IAssetMarket.sol",
        "file": "../IAssetMarket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26821,
        "sourceUnit": 26155,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26820,
        "nodeType": "ContractDefinition",
        "src": "1176:3623:26",
        "nodes": [
          {
            "id": 26620,
            "nodeType": "VariableDeclaration",
            "src": "1256:28:26",
            "constant": true,
            "functionSelector": "18da5649",
            "mutability": "constant",
            "name": "IP",
            "nameLocation": "1278:2:26",
            "scope": 26820,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 26618,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1256:5:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 26619,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1283:1:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "id": 26623,
            "nodeType": "VariableDeclaration",
            "src": "1290:33:26",
            "constant": true,
            "functionSelector": "0a912fc4",
            "mutability": "constant",
            "name": "LICENSE",
            "nameLocation": "1312:7:26",
            "scope": 26820,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 26621,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1290:5:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 26622,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1322:1:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "id": 26625,
            "nodeType": "VariableDeclaration",
            "src": "1349:22:26",
            "constant": false,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "1365:6:26",
            "scope": 26820,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26624,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1349:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 26628,
            "nodeType": "VariableDeclaration",
            "src": "1407:27:26",
            "constant": false,
            "mutability": "mutable",
            "name": "market",
            "nameLocation": "1428:6:26",
            "scope": 26820,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IAssetMarket_$26154",
              "typeString": "contract IAssetMarket"
            },
            "typeName": {
              "id": 26627,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26626,
                "name": "IAssetMarket",
                "nameLocations": [
                  "1407:12:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26154,
                "src": "1407:12:26"
              },
              "referencedDeclaration": 26154,
              "src": "1407:12:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAssetMarket_$26154",
                "typeString": "contract IAssetMarket"
              }
            },
            "visibility": "private"
          },
          {
            "id": 26640,
            "nodeType": "ModifierDefinition",
            "src": "1441:99:26",
            "body": {
              "id": 26639,
              "nodeType": "Block",
              "src": "1462:78:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 26634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 26631,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1480:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 26632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1484:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1480:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 26633,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26625,
                          "src": "1494:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1480:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "49503a206e6f7420746865206f776e6572",
                        "id": 26635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1502:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_993ce77ca30e3f1e0eafd8b971067455944ce011da57cdd463a6b07d21d5a4d3",
                          "typeString": "literal_string \"IP: not the owner\""
                        },
                        "value": "IP: not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_993ce77ca30e3f1e0eafd8b971067455944ce011da57cdd463a6b07d21d5a4d3",
                          "typeString": "literal_string \"IP: not the owner\""
                        }
                      ],
                      "id": 26630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1472:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1472:50:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26637,
                  "nodeType": "ExpressionStatement",
                  "src": "1472:50:26"
                },
                {
                  "id": 26638,
                  "nodeType": "PlaceholderStatement",
                  "src": "1532:1:26"
                }
              ]
            },
            "name": "onlyOwner",
            "nameLocation": "1450:9:26",
            "parameters": {
              "id": 26629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1459:2:26"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 26671,
            "nodeType": "FunctionDefinition",
            "src": "1870:433:26",
            "body": {
              "id": 26670,
              "nodeType": "Block",
              "src": "1984:319:26",
              "statements": [
                {
                  "expression": {
                    "id": 26655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26653,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26625,
                      "src": "2155:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26654,
                      "name": "_assetOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26643,
                      "src": "2164:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2155:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 26656,
                  "nodeType": "ExpressionStatement",
                  "src": "2155:20:26"
                },
                {
                  "expression": {
                    "id": 26661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26657,
                      "name": "market",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26628,
                      "src": "2185:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAssetMarket_$26154",
                        "typeString": "contract IAssetMarket"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 26659,
                          "name": "_market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26647,
                          "src": "2207:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 26658,
                        "name": "IAssetMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26154,
                        "src": "2194:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAssetMarket_$26154_$",
                          "typeString": "type(contract IAssetMarket)"
                        }
                      },
                      "id": 26660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2194:21:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAssetMarket_$26154",
                        "typeString": "contract IAssetMarket"
                      }
                    },
                    "src": "2185:30:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAssetMarket_$26154",
                      "typeString": "contract IAssetMarket"
                    }
                  },
                  "id": 26662,
                  "nodeType": "ExpressionStatement",
                  "src": "2185:30:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26664,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26625,
                        "src": "2278:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26665,
                        "name": "IP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26620,
                        "src": "2286:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2290:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 26667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2293:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 26663,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23923,
                      "src": "2272:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 26668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2272:24:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26669,
                  "nodeType": "ExpressionStatement",
                  "src": "2272:24:26"
                }
              ]
            },
            "documentation": {
              "id": 26641,
              "nodeType": "StructuredDocumentation",
              "src": "1546:319:26",
              "text": " @notice Create an Asset, minting it to the address of the ' _assetOwner'. See Factory.sol\n @param  _assetOwner based on the caller to the Factory\n @param _uri the URI to the metadata of this asset. See indexer API\n @param _market address of the deployed Market contract. See Factory"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 26650,
                    "name": "_uri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26645,
                    "src": "1978:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 26651,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 26649,
                  "name": "ERC1155",
                  "nameLocations": [
                    "1970:7:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24489,
                  "src": "1970:7:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1970:13:26"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 26648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26643,
                  "mutability": "mutable",
                  "name": "_assetOwner",
                  "nameLocation": "1899:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 26671,
                  "src": "1891:19:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26645,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "1934:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 26671,
                  "src": "1920:18:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26644,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1920:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26647,
                  "mutability": "mutable",
                  "name": "_market",
                  "nameLocation": "1956:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 26671,
                  "src": "1948:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1881:88:26"
            },
            "returnParameters": {
              "id": 26652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1984:0:26"
            },
            "scope": 26820,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26709,
            "nodeType": "FunctionDefinition",
            "src": "2354:679:26",
            "body": {
              "id": 26708,
              "nodeType": "Block",
              "src": "2520:513:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26686,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26625,
                        "src": "2681:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26687,
                        "name": "LICENSE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26623,
                        "src": "2689:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 26688,
                        "name": "_licenseQty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26674,
                        "src": "2698:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 26689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2711:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 26685,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23923,
                      "src": "2675:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 26690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2675:39:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26691,
                  "nodeType": "ExpressionStatement",
                  "src": "2675:39:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26695,
                        "name": "_licensePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26676,
                        "src": "2847:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26696,
                        "name": "_isIPForSale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26678,
                        "src": "2862:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 26697,
                        "name": "_ipPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26680,
                        "src": "2876:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 26692,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26628,
                        "src": "2826:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAssetMarket_$26154",
                          "typeString": "contract IAssetMarket"
                        }
                      },
                      "id": 26694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2833:13:26",
                      "memberName": "registerAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26129,
                      "src": "2826:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,bool,uint256) external"
                      }
                    },
                    "id": 26698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2826:59:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26699,
                  "nodeType": "ExpressionStatement",
                  "src": "2826:59:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26703,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26628,
                            "src": "3012:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAssetMarket_$26154",
                              "typeString": "contract IAssetMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IAssetMarket_$26154",
                              "typeString": "contract IAssetMarket"
                            }
                          ],
                          "id": 26702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3004:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26701,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3004:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3004:15:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 26705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3021:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26700,
                      "name": "setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23463,
                      "src": "2986:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 26706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2986:40:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26707,
                  "nodeType": "ExpressionStatement",
                  "src": "2986:40:26"
                }
              ]
            },
            "baseFunctions": [
              26986
            ],
            "documentation": {
              "id": 26672,
              "nodeType": "StructuredDocumentation",
              "src": "2309:40:26",
              "text": " @dev See {IBioAsset}."
            },
            "functionSelector": "40c9f51d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 26683,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 26682,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2510:9:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26640,
                  "src": "2510:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "2510:9:26"
              }
            ],
            "name": "registerWithMarket",
            "nameLocation": "2363:18:26",
            "parameters": {
              "id": 26681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26674,
                  "mutability": "mutable",
                  "name": "_licenseQty",
                  "nameLocation": "2399:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 26709,
                  "src": "2391:19:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2391:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26676,
                  "mutability": "mutable",
                  "name": "_licensePrice",
                  "nameLocation": "2428:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 26709,
                  "src": "2420:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2420:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26678,
                  "mutability": "mutable",
                  "name": "_isIPForSale",
                  "nameLocation": "2456:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 26709,
                  "src": "2451:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26677,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2451:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26680,
                  "mutability": "mutable",
                  "name": "_ipPrice",
                  "nameLocation": "2486:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 26709,
                  "src": "2478:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2478:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2381:119:26"
            },
            "returnParameters": {
              "id": 26684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2520:0:26"
            },
            "scope": 26820,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26730,
            "nodeType": "FunctionDefinition",
            "src": "3084:273:26",
            "body": {
              "id": 26729,
              "nodeType": "Block",
              "src": "3219:138:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26724,
                        "name": "_licensePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26712,
                        "src": "3312:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26725,
                        "name": "_isIPForSale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26714,
                        "src": "3327:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 26726,
                        "name": "_ipPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26716,
                        "src": "3341:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 26721,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26628,
                        "src": "3293:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAssetMarket_$26154",
                          "typeString": "contract IAssetMarket"
                        }
                      },
                      "id": 26723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3300:11:26",
                      "memberName": "updateAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26139,
                      "src": "3293:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,bool,uint256) external"
                      }
                    },
                    "id": 26727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3293:57:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26728,
                  "nodeType": "ExpressionStatement",
                  "src": "3293:57:26"
                }
              ]
            },
            "baseFunctions": [
              26996
            ],
            "documentation": {
              "id": 26710,
              "nodeType": "StructuredDocumentation",
              "src": "3039:40:26",
              "text": " @dev See {IBioAsset}."
            },
            "functionSelector": "1a498505",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 26719,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 26718,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3209:9:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26640,
                  "src": "3209:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "3209:9:26"
              }
            ],
            "name": "updateWithMarket",
            "nameLocation": "3093:16:26",
            "parameters": {
              "id": 26717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26712,
                  "mutability": "mutable",
                  "name": "_licensePrice",
                  "nameLocation": "3127:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 26730,
                  "src": "3119:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3119:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26714,
                  "mutability": "mutable",
                  "name": "_isIPForSale",
                  "nameLocation": "3155:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 26730,
                  "src": "3150:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26713,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3150:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26716,
                  "mutability": "mutable",
                  "name": "_ipPrice",
                  "nameLocation": "3185:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 26730,
                  "src": "3177:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3177:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3109:90:26"
            },
            "returnParameters": {
              "id": 26720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3219:0:26"
            },
            "scope": 26820,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26743,
            "nodeType": "FunctionDefinition",
            "src": "3408:104:26",
            "body": {
              "id": 26742,
              "nodeType": "Block",
              "src": "3469:43:26",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 26739,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26733,
                        "src": "3500:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 26738,
                      "name": "MetaDataCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26957,
                      "src": "3484:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3484:21:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26741,
                  "nodeType": "EmitStatement",
                  "src": "3479:26:26"
                }
              ]
            },
            "baseFunctions": [
              26968
            ],
            "documentation": {
              "id": 26731,
              "nodeType": "StructuredDocumentation",
              "src": "3363:40:26",
              "text": " @dev See {IBioAsset}."
            },
            "functionSelector": "1bf4f4e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 26736,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 26735,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3459:9:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26640,
                  "src": "3459:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "3459:9:26"
              }
            ],
            "name": "setMetaData",
            "nameLocation": "3417:11:26",
            "parameters": {
              "id": 26734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26733,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3444:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 26743,
                  "src": "3429:19:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26732,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3429:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3428:21:26"
            },
            "returnParameters": {
              "id": 26737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3469:0:26"
            },
            "scope": 26820,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26756,
            "nodeType": "FunctionDefinition",
            "src": "3563:107:26",
            "body": {
              "id": 26755,
              "nodeType": "Block",
              "src": "3627:43:26",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 26752,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26746,
                        "src": "3658:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 26751,
                      "name": "MetaDataUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26962,
                      "src": "3642:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 26753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3642:21:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26754,
                  "nodeType": "EmitStatement",
                  "src": "3637:26:26"
                }
              ]
            },
            "baseFunctions": [
              26974
            ],
            "documentation": {
              "id": 26744,
              "nodeType": "StructuredDocumentation",
              "src": "3518:40:26",
              "text": " @dev See {IBioAsset}."
            },
            "functionSelector": "6634d733",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 26749,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 26748,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3617:9:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26640,
                  "src": "3617:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "3617:9:26"
              }
            ],
            "name": "updateMetaData",
            "nameLocation": "3572:14:26",
            "parameters": {
              "id": 26747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26746,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3602:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 26756,
                  "src": "3587:19:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26745,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3587:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3586:21:26"
            },
            "returnParameters": {
              "id": 26750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3627:0:26"
            },
            "scope": 26820,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26765,
            "nodeType": "FunctionDefinition",
            "src": "3721:79:26",
            "body": {
              "id": 26764,
              "nodeType": "Block",
              "src": "3770:30:26",
              "statements": [
                {
                  "expression": {
                    "id": 26762,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26625,
                    "src": "3787:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 26761,
                  "id": 26763,
                  "nodeType": "Return",
                  "src": "3780:13:26"
                }
              ]
            },
            "baseFunctions": [
              27002
            ],
            "documentation": {
              "id": 26757,
              "nodeType": "StructuredDocumentation",
              "src": "3676:40:26",
              "text": " @dev See {IBioAsset}."
            },
            "functionSelector": "8da5cb5b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "3730:5:26",
            "parameters": {
              "id": 26758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3735:2:26"
            },
            "returnParameters": {
              "id": 26761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26760,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26765,
                  "src": "3761:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3761:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3760:9:26"
            },
            "scope": 26820,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26777,
            "nodeType": "FunctionDefinition",
            "src": "3851:109:26",
            "body": {
              "id": 26776,
              "nodeType": "Block",
              "src": "3910:50:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26772,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26625,
                        "src": "3937:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26773,
                        "name": "LICENSE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26623,
                        "src": "3945:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 26771,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23382,
                      "src": "3927:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 26774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3927:26:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 26770,
                  "id": 26775,
                  "nodeType": "Return",
                  "src": "3920:33:26"
                }
              ]
            },
            "baseFunctions": [
              27008
            ],
            "documentation": {
              "id": 26766,
              "nodeType": "StructuredDocumentation",
              "src": "3806:40:26",
              "text": " @dev See {IBioAsset}."
            },
            "functionSelector": "4563dbb4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "availableLicenses",
            "nameLocation": "3860:17:26",
            "parameters": {
              "id": 26767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3877:2:26"
            },
            "returnParameters": {
              "id": 26770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26769,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26777,
                  "src": "3901:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3901:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3900:9:26"
            },
            "scope": 26820,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26819,
            "nodeType": "FunctionDefinition",
            "src": "4018:779:26",
            "body": {
              "id": 26818,
              "nodeType": "Block",
              "src": "4246:551:26",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 26799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 26795,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26786,
                        "src": "4346:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 26797,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 26796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4350:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4346:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 26798,
                      "name": "IP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26620,
                      "src": "4356:2:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4346:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26817,
                  "nodeType": "IfStatement",
                  "src": "4342:449:26",
                  "trueBody": {
                    "id": 26816,
                    "nodeType": "Block",
                    "src": "4360:431:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 26802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 26800,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26625,
                            "src": "4490:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 26801,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26783,
                            "src": "4499:2:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4490:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 26803,
                        "nodeType": "ExpressionStatement",
                        "src": "4490:11:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 26805,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26781,
                              "src": "4592:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 26806,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26779,
                              "src": "4598:8:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 26807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4608:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 26804,
                            "name": "_setApprovalForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24294,
                            "src": "4573:18:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,bool)"
                            }
                          },
                          "id": 26808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4573:41:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 26809,
                        "nodeType": "ExpressionStatement",
                        "src": "4573:41:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 26811,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26783,
                              "src": "4701:2:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 26812,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26779,
                              "src": "4705:8:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 26813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4715:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 26810,
                            "name": "_setApprovalForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24294,
                            "src": "4682:18:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,bool)"
                            }
                          },
                          "id": 26814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4682:38:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 26815,
                        "nodeType": "ExpressionStatement",
                        "src": "4682:38:26"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              24332
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "4027:19:26",
            "overrides": {
              "id": 26793,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4237:8:26"
            },
            "parameters": {
              "id": 26792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26779,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4064:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 26819,
                  "src": "4056:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4056:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26781,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4090:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 26819,
                  "src": "4082:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4082:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26783,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4112:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 26819,
                  "src": "4104:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4104:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26786,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "4141:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 26819,
                  "src": "4124:20:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 26784,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4124:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 26785,
                    "nodeType": "ArrayTypeName",
                    "src": "4124:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26789,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26819,
                  "src": "4154:16:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 26787,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4154:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 26788,
                    "nodeType": "ArrayTypeName",
                    "src": "4154:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26791,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26819,
                  "src": "4192:12:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26790,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4192:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4046:173:26"
            },
            "returnParameters": {
              "id": 26794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4246:0:26"
            },
            "scope": 26820,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26612,
              "name": "ERC1155",
              "nameLocations": [
                "1197:7:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24489,
              "src": "1197:7:26"
            },
            "id": 26613,
            "nodeType": "InheritanceSpecifier",
            "src": "1197:7:26"
          },
          {
            "baseName": {
              "id": 26614,
              "name": "IBioAsset",
              "nameLocations": [
                "1206:9:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27009,
              "src": "1206:9:26"
            },
            "id": 26615,
            "nodeType": "InheritanceSpecifier",
            "src": "1206:9:26"
          },
          {
            "baseName": {
              "id": 26616,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "1217:15:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23266,
              "src": "1217:15:26"
            },
            "id": 26617,
            "nodeType": "InheritanceSpecifier",
            "src": "1217:15:26"
          }
        ],
        "canonicalName": "BioAsset",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 26611,
          "nodeType": "StructuredDocumentation",
          "src": "277:898:26",
          "text": " @notice Represents an asset.  Used to track ownership, provenance, and transfers.\n A user can create an instance of this contract to assert ownership of their Asset(think NFT).\n For now, the address of this contract represents it's globally unique identifier\n Through this contract an owner can mint and sell copyright licenses.\n Sales and transfers are handled via an independent 'Market' contract.  The owner can\n also (optionally) sell and transfer the Asset (and it's IP) through the market.\n Metadata about the asset, such as terms/conditions, etc... are embedded in the event\n log for the contract\n All sales of an asset are conducted with BioTokens.\n @dev There's a single NFT represented by the id 1\n There can be many licenses represented by the id 2\n TODO: allow the owner to 'mint' more licenses (ID 2)\n Inspired by the Ocean Protocol"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          26820,
          23266,
          27009,
          24489,
          24667,
          24611,
          26006,
          26018,
          25982
        ],
        "name": "BioAsset",
        "nameLocation": "1185:8:26",
        "scope": 26821,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 26
}